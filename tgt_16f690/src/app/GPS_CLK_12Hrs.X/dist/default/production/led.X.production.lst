

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Thu Nov 08 21:13:55 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 1.44
    30                           ; Generated 14/09/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F690 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0115                     	;# 
   125  0116                     	;# 
   126  0118                     	;# 
   127  0119                     	;# 
   128  011A                     	;# 
   129  011B                     	;# 
   130  011E                     	;# 
   131  011F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  019D                     	;# 
   135  019E                     	;# 
   136  0019                     _TXREG	set	25
   137  0018                     _RCSTA	set	24
   138  001A                     _RCREG	set	26
   139  0006                     _PORTBbits	set	6
   140  0007                     _PORTC	set	7
   141  0005                     _PORTA	set	5
   142  00C7                     _SPEN	set	199
   143  00C4                     _CREN	set	196
   144  005E                     _PEIE	set	94
   145  005F                     _GIE	set	95
   146  0065                     _RCIF	set	101
   147  009A                     _SPBRGH	set	154
   148  0099                     _SPBRG	set	153
   149  0098                     _TXSTA	set	152
   150  0086                     _TRISB	set	134
   151  0087                     _TRISC	set	135
   152  0085                     _TRISA	set	133
   153  008F                     _OSCCON	set	143
   154  04C1                     _TRMT	set	1217
   155  04DB                     _BRG16	set	1243
   156  04C2                     _BRGH	set	1218
   157  0435                     _TRISB5	set	1077
   158  0465                     _RCIE	set	1125
   159  011F                     _ANSELH	set	287
   160  011E                     _ANSEL	set	286
   161                           
   162                           ; #config settings
   163  0000                     
   164                           	psect	cinit
   165  0013                     start_initialization:	
   166  0013                     __initialization:	
   167                           
   168                           ; Clear objects allocated to COMMON
   169  0013  3070               	movlw	low __pbssCOMMON
   170  0014  0084               	movwf	4
   171  0015  3076               	movlw	low (__pbssCOMMON+6)
   172  0016  118A  24CD  118A   	fcall	clear_ram0
   173                           
   174                           ; Clear objects allocated to BANK0
   175  0019  1383               	bcf	3,7	;select IRP bank0
   176  001A  3020               	movlw	low __pbssBANK0
   177  001B  0084               	movwf	4
   178  001C  3048               	movlw	low (__pbssBANK0+40)
   179  001D  118A  24CD  118A   	fcall	clear_ram0
   180                           
   181                           ; Clear objects allocated to BANK1
   182  0020  30A0               	movlw	low __pbssBANK1
   183  0021  0084               	movwf	4
   184  0022  30F0               	movlw	low (__pbssBANK1+80)
   185  0023  118A  24CD         	fcall	clear_ram0
   186  0025                     end_of_initialization:	
   187                           ;End of C runtime variable initialization code
   188                           
   189  0025                     __end_of__initialization:	
   190  0025  0183               	clrf	3
   191  0026  118A  2828         	ljmp	_main	;jump to C main() function
   192                           
   193                           	psect	bssCOMMON
   194  0070                     __pbssCOMMON:	
   195  0070                     _Time_Temp2:	
   196  0070                     	ds	1
   197  0071                     _j:	
   198  0071                     	ds	1
   199  0072                     _U8Valid_Char:	
   200  0072                     	ds	1
   201  0073                     _U16ResponseSize:	
   202  0073                     	ds	1
   203  0074                     _U16Rx_Write_Index:	
   204  0074                     	ds	1
   205  0075                     _Time_Temp1:	
   206  0075                     	ds	1
   207                           
   208                           	psect	bssBANK0
   209  0020                     __pbssBANK0:	
   210  0020                     _IST_TIME1:	
   211  0020                     	ds	9
   212  0029                     _IST_TIME:	
   213  0029                     	ds	9
   214  0032                     _i:	
   215  0032                     	ds	2
   216  0034                     _sec:	
   217  0034                     	ds	2
   218  0036                     _error_cnt:	
   219  0036                     	ds	2
   220  0038                     _Temp_Cnt:	
   221  0038                     	ds	2
   222  003A                     _Time_local_Sec:	
   223  003A                     	ds	2
   224  003C                     _Time_local_Min:	
   225  003C                     	ds	2
   226  003E                     _Time_local_Hr:	
   227  003E                     	ds	2
   228  0040                     _U8sent_intervel_cnt:	
   229  0040                     	ds	2
   230  0042                     _U8_tmr_cnt:	
   231  0042                     	ds	2
   232  0044                     _offset:	
   233  0044                     	ds	1
   234  0045                     _Time_Sec:	
   235  0045                     	ds	1
   236  0046                     _Time_Min:	
   237  0046                     	ds	1
   238  0047                     _Time_Hr:	
   239  0047                     	ds	1
   240                           
   241                           	psect	bssBANK1
   242  00A0                     __pbssBANK1:	
   243  00A0                     _Receive_buffer:	
   244  00A0                     	ds	80
   245                           
   246                           	psect	clrtext
   247  04CD                     clear_ram0:	
   248                           ;	Called with FSR containing the base address, and
   249                           ;	W with the last address+1
   250                           
   251  04CD  0064               	clrwdt	;clear the watchdog before getting into this loop
   252  04CE                     clrloop0:	
   253  04CE  0180               	clrf	0	;clear RAM location pointed to by FSR
   254  04CF  0A84               	incf	4,f	;increment pointer
   255  04D0  0604               	xorwf	4,w	;XOR with final address
   256  04D1  1903               	btfsc	3,2	;have we reached the end yet?
   257  04D2  3400               	retlw	0	;all done for this memory range, return
   258  04D3  0604               	xorwf	4,w	;XOR again to restore value
   259  04D4  2CCE               	goto	clrloop0	;do the next byte
   260                           
   261                           	psect	cstackCOMMON
   262  0076                     __pcstackCOMMON:	
   263  0076                     ?_UARTReceiveInterrupt:	
   264  0076                     ??_UARTReceiveInterrupt:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0076                     ?_INIT:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0076                     ?_Tick:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0076                     ?_UARTReceiveddatasize:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0076                     ?_UARTResetRxBuffer:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0076                     ?_IST_Time_Formate:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0076                     ?_Time_Formate_to_STR:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0076                     ?_Time_Formate_to_STR_local:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0076                     ?_ISR:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0076                     ?_main:	
   292                           ; 1 bytes @ 0x0
   293                           
   294                           
   295                           ; 1 bytes @ 0x0
   296  0076                     	ds	1
   297  0077                     UARTReceiveInterrupt@temp:	
   298                           
   299                           ; 1 bytes @ 0x1
   300  0077                     	ds	1
   301  0078                     ??_ISR:	
   302                           
   303                           ; 1 bytes @ 0x2
   304  0078                     	ds	4
   305                           
   306                           	psect	cstackBANK0
   307  0048                     __pcstackBANK0:	
   308  0048                     ??_INIT:	
   309  0048                     ??_Tick:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0048                     ??_UARTReceiveddatasize:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0048                     ??_UARTResetRxBuffer:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0048                     ?___bmul:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0048                     ?___awdiv:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0048                     ?___awmod:	
   325                           ; 2 bytes @ 0x0
   326                           
   327  0048                     ?___lwdiv:	
   328                           ; 2 bytes @ 0x0
   329                           
   330  0048                     ?___lwmod:	
   331                           ; 2 bytes @ 0x0
   332                           
   333  0048                     ___bmul@multiplicand:	
   334                           ; 2 bytes @ 0x0
   335                           
   336  0048                     ___awdiv@divisor:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0048                     ___awmod@divisor:	
   340                           ; 2 bytes @ 0x0
   341                           
   342  0048                     ___lwdiv@divisor:	
   343                           ; 2 bytes @ 0x0
   344                           
   345  0048                     ___lwmod@divisor:	
   346                           ; 2 bytes @ 0x0
   347                           
   348                           
   349                           ; 2 bytes @ 0x0
   350  0048                     	ds	1
   351  0049                     ??___bmul:	
   352                           
   353                           ; 1 bytes @ 0x1
   354  0049                     	ds	1
   355  004A                     ___bmul@product:	
   356  004A                     ___awdiv@dividend:	
   357                           ; 1 bytes @ 0x2
   358                           
   359  004A                     ___awmod@dividend:	
   360                           ; 2 bytes @ 0x2
   361                           
   362  004A                     ___lwdiv@dividend:	
   363                           ; 2 bytes @ 0x2
   364                           
   365  004A                     ___lwmod@dividend:	
   366                           ; 2 bytes @ 0x2
   367                           
   368                           
   369                           ; 2 bytes @ 0x2
   370  004A                     	ds	1
   371  004B                     ___bmul@multiplier:	
   372                           
   373                           ; 1 bytes @ 0x3
   374  004B                     	ds	1
   375  004C                     ??_IST_Time_Formate:	
   376  004C                     ??___awdiv:	
   377                           ; 1 bytes @ 0x4
   378                           
   379  004C                     ??___awmod:	
   380                           ; 1 bytes @ 0x4
   381                           
   382  004C                     ??___lwdiv:	
   383                           ; 1 bytes @ 0x4
   384                           
   385  004C                     ??___lwmod:	
   386                           ; 1 bytes @ 0x4
   387                           
   388                           
   389                           ; 1 bytes @ 0x4
   390  004C                     	ds	1
   391  004D                     ___awdiv@counter:	
   392  004D                     ___awmod@counter:	
   393                           ; 1 bytes @ 0x5
   394                           
   395  004D                     ___lwdiv@counter:	
   396                           ; 1 bytes @ 0x5
   397                           
   398  004D                     ___lwmod@counter:	
   399                           ; 1 bytes @ 0x5
   400                           
   401                           
   402                           ; 1 bytes @ 0x5
   403  004D                     	ds	1
   404  004E                     ___awdiv@sign:	
   405  004E                     ___awmod@sign:	
   406                           ; 1 bytes @ 0x6
   407                           
   408  004E                     ___lwdiv@quotient:	
   409                           ; 1 bytes @ 0x6
   410                           
   411                           
   412                           ; 2 bytes @ 0x6
   413  004E                     	ds	1
   414  004F                     ___awdiv@quotient:	
   415                           
   416                           ; 2 bytes @ 0x7
   417  004F                     	ds	1
   418  0050                     ??_Time_Formate_to_STR_local:	
   419                           
   420                           ; 1 bytes @ 0x8
   421  0050                     	ds	1
   422  0051                     ??_Time_Formate_to_STR:	
   423                           
   424                           ; 1 bytes @ 0x9
   425  0051                     	ds	3
   426  0054                     ??_main:	
   427                           
   428                           ; 1 bytes @ 0xC
   429  0054                     	ds	2
   430  0056                     main@j:	
   431                           
   432                           ; 2 bytes @ 0xE
   433  0056                     	ds	2
   434                           
   435                           	psect	maintext
   436  0028                     __pmaintext:	
   437 ;;
   438 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   439 ;;
   440 ;; *************** function _main *****************
   441 ;; Defined at:
   442 ;;		line 71 in file "main.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;  j               2   14[BANK0 ] int 
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		wreg, status,2, status,0, pclath, cstack
   451 ;; Tracked objects:
   452 ;;		On entry : B00/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   456 ;;      Params:         0       0       0       0
   457 ;;      Locals:         0       2       0       0
   458 ;;      Temps:          0       2       0       0
   459 ;;      Totals:         0       4       0       0
   460 ;;Total ram usage:        4 bytes
   461 ;; Hardware stack levels required when called:    4
   462 ;; This function calls:
   463 ;;		_INIT
   464 ;;		_IST_Time_Formate
   465 ;;		_Tick
   466 ;;		_Time_Formate_to_STR
   467 ;;		_Time_Formate_to_STR_local
   468 ;;		_UARTReceiveddatasize
   469 ;;		_UARTResetRxBuffer
   470 ;; This function is called by:
   471 ;;		Startup code after reset
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           
   476                           ;psect for function _main
   477  0028                     _main:	
   478                           
   479                           ;main.c: 73: INIT();
   480                           
   481                           ;incstack = 0
   482                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   483  0028  118A  247C  118A   	fcall	_INIT
   484                           
   485                           ;main.c: 74: PORTA=0xFF;
   486  002B  30FF               	movlw	255
   487  002C  1283               	bcf	3,5	;RP0=0, select bank0
   488  002D  1303               	bcf	3,6	;RP1=0, select bank0
   489  002E  0085               	movwf	5	;volatile
   490                           
   491                           ;main.c: 75: int j=0;
   492  002F  01D6               	clrf	main@j
   493  0030  01D7               	clrf	main@j+1
   494  0031  2891               	goto	l1761
   495  0032                     l1765:	
   496                           
   497                           ;main.c: 81: {
   498                           ;main.c: 82: PORTA=0xFF;
   499  0032  30FF               	movlw	255
   500  0033  0085               	movwf	5	;volatile
   501                           
   502                           ;main.c: 83: UARTResetRxBuffer(); IST_Time_Formate(); Time_Formate_to_STR();
   503  0034  118A  24D5  118A   	fcall	_UARTResetRxBuffer
   504  0037  118A  20F2  118A   	fcall	_IST_Time_Formate
   505  003A  118A  219D  118A   	fcall	_Time_Formate_to_STR
   506                           
   507                           ;main.c: 84: PORTC=IST_TIME1[0]; PORTA=0xFE; _delay((unsigned long)((5)*(8000000/4000.0)
      +                          )); PORTA=0xFF;
   508  003D  1283               	bcf	3,5	;RP0=0, select bank0
   509  003E  1303               	bcf	3,6	;RP1=0, select bank0
   510  003F  0820               	movf	_IST_TIME1,w
   511  0040  0087               	movwf	7	;volatile
   512  0041  30FE               	movlw	254
   513  0042  0085               	movwf	5	;volatile
   514  0043  300D               	movlw	13
   515  0044  1283               	bcf	3,5	;RP0=0, select bank0
   516  0045  1303               	bcf	3,6	;RP1=0, select bank0
   517  0046  00D5               	movwf	??_main+1
   518  0047  30FB               	movlw	251
   519  0048  00D4               	movwf	??_main
   520  0049                     u1807:	
   521  0049  0BD4               	decfsz	??_main,f
   522  004A  2849               	goto	u1807
   523  004B  0BD5               	decfsz	??_main+1,f
   524  004C  2849               	goto	u1807
   525  004D  0000               	nop
   526  004E  30FF               	movlw	255
   527  004F  1283               	bcf	3,5	;RP0=0, select bank0
   528  0050  1303               	bcf	3,6	;RP1=0, select bank0
   529  0051  0085               	movwf	5	;volatile
   530                           
   531                           ;main.c: 85: PORTC=IST_TIME1[1]; PORTA=0xFD; _delay((unsigned long)((5)*(8000000/4000.0)
      +                          )); PORTA=0xFF;
   532  0052  0821               	movf	_IST_TIME1+1,w
   533  0053  0087               	movwf	7	;volatile
   534  0054  30FD               	movlw	253
   535  0055  0085               	movwf	5	;volatile
   536  0056  300D               	movlw	13
   537  0057  1283               	bcf	3,5	;RP0=0, select bank0
   538  0058  1303               	bcf	3,6	;RP1=0, select bank0
   539  0059  00D5               	movwf	??_main+1
   540  005A  30FB               	movlw	251
   541  005B  00D4               	movwf	??_main
   542  005C                     u1817:	
   543  005C  0BD4               	decfsz	??_main,f
   544  005D  285C               	goto	u1817
   545  005E  0BD5               	decfsz	??_main+1,f
   546  005F  285C               	goto	u1817
   547  0060  0000               	nop
   548  0061  30FF               	movlw	255
   549  0062  1283               	bcf	3,5	;RP0=0, select bank0
   550  0063  1303               	bcf	3,6	;RP1=0, select bank0
   551  0064  0085               	movwf	5	;volatile
   552                           
   553                           ;main.c: 86: PORTC=IST_TIME1[2]; PORTA=0xFB; _delay((unsigned long)((5)*(8000000/4000.0)
      +                          )); PORTA=0xFF;
   554  0065  0822               	movf	_IST_TIME1+2,w
   555  0066  0087               	movwf	7	;volatile
   556  0067  30FB               	movlw	251
   557  0068  0085               	movwf	5	;volatile
   558  0069  300D               	movlw	13
   559  006A  1283               	bcf	3,5	;RP0=0, select bank0
   560  006B  1303               	bcf	3,6	;RP1=0, select bank0
   561  006C  00D5               	movwf	??_main+1
   562  006D  30FB               	movlw	251
   563  006E  00D4               	movwf	??_main
   564  006F                     u1827:	
   565  006F  0BD4               	decfsz	??_main,f
   566  0070  286F               	goto	u1827
   567  0071  0BD5               	decfsz	??_main+1,f
   568  0072  286F               	goto	u1827
   569  0073  0000               	nop
   570  0074  30FF               	movlw	255
   571  0075  1283               	bcf	3,5	;RP0=0, select bank0
   572  0076  1303               	bcf	3,6	;RP1=0, select bank0
   573  0077  0085               	movwf	5	;volatile
   574                           
   575                           ;main.c: 87: PORTC=IST_TIME1[3]; PORTA=0xDF; _delay((unsigned long)((5)*(8000000/4000.0)
      +                          )); PORTA=0xFF;
   576  0078  0823               	movf	_IST_TIME1+3,w
   577  0079  0087               	movwf	7	;volatile
   578  007A  30DF               	movlw	223
   579  007B  0085               	movwf	5	;volatile
   580  007C  300D               	movlw	13
   581  007D  1283               	bcf	3,5	;RP0=0, select bank0
   582  007E  1303               	bcf	3,6	;RP1=0, select bank0
   583  007F  00D5               	movwf	??_main+1
   584  0080  30FB               	movlw	251
   585  0081  00D4               	movwf	??_main
   586  0082                     u1837:	
   587  0082  0BD4               	decfsz	??_main,f
   588  0083  2882               	goto	u1837
   589  0084  0BD5               	decfsz	??_main+1,f
   590  0085  2882               	goto	u1837
   591  0086  0000               	nop
   592  0087  30FF               	movlw	255
   593  0088  1283               	bcf	3,5	;RP0=0, select bank0
   594  0089  1303               	bcf	3,6	;RP1=0, select bank0
   595  008A  0085               	movwf	5	;volatile
   596                           
   597                           ;main.c: 88: Temp_Cnt=0; error_cnt=0;sec=0;
   598  008B  01B8               	clrf	_Temp_Cnt
   599  008C  01B9               	clrf	_Temp_Cnt+1
   600  008D  01B6               	clrf	_error_cnt
   601  008E  01B7               	clrf	_error_cnt+1
   602  008F  01B4               	clrf	_sec
   603  0090  01B5               	clrf	_sec+1
   604  0091                     l1761:	
   605                           ;main.c: 76: while(1)
   606                           
   607                           ;main.c: 90: }
   608                           
   609                           
   610                           ;main.c: 77: {
   611                           ;main.c: 78: Tick();
   612  0091  118A  228B  118A   	fcall	_Tick
   613                           
   614                           ;main.c: 80: if(UARTReceiveddatasize() > 8)
   615  0094  118A  24D8  118A   	fcall	_UARTReceiveddatasize
   616  0097  1283               	bcf	3,5	;RP0=0, select bank0
   617  0098  1303               	bcf	3,6	;RP1=0, select bank0
   618  0099  00D4               	movwf	??_main
   619  009A  3009               	movlw	9
   620  009B  0254               	subwf	??_main,w
   621  009C  1803               	btfsc	3,0
   622  009D  2832               	goto	l1765
   623                           
   624                           ;main.c: 91: else
   625                           ;main.c: 92: {
   626                           ;main.c: 93: PORTA=0xFF;
   627  009E  30FF               	movlw	255
   628  009F  0085               	movwf	5	;volatile
   629                           
   630                           ;main.c: 94: Time_Formate_to_STR_local();
   631  00A0  118A  22FA  118A   	fcall	_Time_Formate_to_STR_local
   632                           
   633                           ;main.c: 95: PORTC=IST_TIME1[0]; PORTA=0xFE; _delay((unsigned long)((5)*(8000000/4000.0)
      +                          )); PORTA=0xFF;
   634  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   635  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   636  00A5  0820               	movf	_IST_TIME1,w
   637  00A6  0087               	movwf	7	;volatile
   638  00A7  30FE               	movlw	254
   639  00A8  0085               	movwf	5	;volatile
   640  00A9  300D               	movlw	13
   641  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   642  00AB  1303               	bcf	3,6	;RP1=0, select bank0
   643  00AC  00D5               	movwf	??_main+1
   644  00AD  30FB               	movlw	251
   645  00AE  00D4               	movwf	??_main
   646  00AF                     u1847:	
   647  00AF  0BD4               	decfsz	??_main,f
   648  00B0  28AF               	goto	u1847
   649  00B1  0BD5               	decfsz	??_main+1,f
   650  00B2  28AF               	goto	u1847
   651  00B3  0000               	nop
   652  00B4  30FF               	movlw	255
   653  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   654  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   655  00B7  0085               	movwf	5	;volatile
   656                           
   657                           ;main.c: 96: PORTC=IST_TIME1[1]; PORTA=0xFD; _delay((unsigned long)((5)*(8000000/4000.0)
      +                          )); PORTA=0xFF;
   658  00B8  0821               	movf	_IST_TIME1+1,w
   659  00B9  0087               	movwf	7	;volatile
   660  00BA  30FD               	movlw	253
   661  00BB  0085               	movwf	5	;volatile
   662  00BC  300D               	movlw	13
   663  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   664  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   665  00BF  00D5               	movwf	??_main+1
   666  00C0  30FB               	movlw	251
   667  00C1  00D4               	movwf	??_main
   668  00C2                     u1857:	
   669  00C2  0BD4               	decfsz	??_main,f
   670  00C3  28C2               	goto	u1857
   671  00C4  0BD5               	decfsz	??_main+1,f
   672  00C5  28C2               	goto	u1857
   673  00C6  0000               	nop
   674  00C7  30FF               	movlw	255
   675  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   676  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   677  00CA  0085               	movwf	5	;volatile
   678                           
   679                           ;main.c: 97: PORTC=IST_TIME1[2]; PORTA=0xFB; _delay((unsigned long)((5)*(8000000/4000.0)
      +                          )); PORTA=0xFF;
   680  00CB  0822               	movf	_IST_TIME1+2,w
   681  00CC  0087               	movwf	7	;volatile
   682  00CD  30FB               	movlw	251
   683  00CE  0085               	movwf	5	;volatile
   684  00CF  300D               	movlw	13
   685  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   686  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   687  00D2  00D5               	movwf	??_main+1
   688  00D3  30FB               	movlw	251
   689  00D4  00D4               	movwf	??_main
   690  00D5                     u1867:	
   691  00D5  0BD4               	decfsz	??_main,f
   692  00D6  28D5               	goto	u1867
   693  00D7  0BD5               	decfsz	??_main+1,f
   694  00D8  28D5               	goto	u1867
   695  00D9  0000               	nop
   696  00DA  30FF               	movlw	255
   697  00DB  1283               	bcf	3,5	;RP0=0, select bank0
   698  00DC  1303               	bcf	3,6	;RP1=0, select bank0
   699  00DD  0085               	movwf	5	;volatile
   700                           
   701                           ;main.c: 98: PORTC=IST_TIME1[3]; PORTA=0xDF; _delay((unsigned long)((5)*(8000000/4000.0)
      +                          )); PORTA=0xFF;
   702  00DE  0823               	movf	_IST_TIME1+3,w
   703  00DF  0087               	movwf	7	;volatile
   704  00E0  30DF               	movlw	223
   705  00E1  0085               	movwf	5	;volatile
   706  00E2  300D               	movlw	13
   707  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   708  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   709  00E5  00D5               	movwf	??_main+1
   710  00E6  30FB               	movlw	251
   711  00E7  00D4               	movwf	??_main
   712  00E8                     u1877:	
   713  00E8  0BD4               	decfsz	??_main,f
   714  00E9  28E8               	goto	u1877
   715  00EA  0BD5               	decfsz	??_main+1,f
   716  00EB  28E8               	goto	u1877
   717  00EC  0000               	nop
   718  00ED  30FF               	movlw	255
   719  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   720  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   721  00F0  0085               	movwf	5	;volatile
   722  00F1  2891               	goto	l1761
   723  00F2                     __end_of_main:	
   724                           
   725                           	psect	text1
   726  04D5                     __ptext1:	
   727 ;; *************** function _UARTResetRxBuffer *****************
   728 ;; Defined at:
   729 ;;		line 144 in file "main.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		status,2
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   743 ;;      Params:         0       0       0       0
   744 ;;      Locals:         0       0       0       0
   745 ;;      Temps:          0       0       0       0
   746 ;;      Totals:         0       0       0       0
   747 ;;Total ram usage:        0 bytes
   748 ;; Hardware stack levels used:    1
   749 ;; Hardware stack levels required when called:    2
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           
   758                           ;psect for function _UARTResetRxBuffer
   759  04D5                     _UARTResetRxBuffer:	
   760                           
   761                           ;main.c: 146: U16Rx_Write_Index=0;
   762                           
   763                           ;incstack = 0
   764                           ; Regs used in _UARTResetRxBuffer: [status,2]
   765  04D5  01F4               	clrf	_U16Rx_Write_Index
   766                           
   767                           ;main.c: 147: U16ResponseSize=0;
   768  04D6  01F3               	clrf	_U16ResponseSize
   769  04D7  0008               	return
   770  04D8                     __end_of_UARTResetRxBuffer:	
   771                           
   772                           	psect	text2
   773  04D8                     __ptext2:	
   774 ;; *************** function _UARTReceiveddatasize *****************
   775 ;; Defined at:
   776 ;;		line 139 in file "main.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      unsigned char 
   783 ;; Registers used:
   784 ;;		wreg
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   790 ;;      Params:         0       0       0       0
   791 ;;      Locals:         0       0       0       0
   792 ;;      Temps:          0       0       0       0
   793 ;;      Totals:         0       0       0       0
   794 ;;Total ram usage:        0 bytes
   795 ;; Hardware stack levels used:    1
   796 ;; Hardware stack levels required when called:    2
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_main
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           
   805                           ;psect for function _UARTReceiveddatasize
   806  04D8                     _UARTReceiveddatasize:	
   807                           
   808                           ;main.c: 141: return U16ResponseSize;
   809                           
   810                           ;incstack = 0
   811                           ; Regs used in _UARTReceiveddatasize: [wreg]
   812  04D8  0873               	movf	_U16ResponseSize,w
   813  04D9  0008               	return
   814  04DA                     __end_of_UARTReceiveddatasize:	
   815                           
   816                           	psect	text3
   817  02FA                     __ptext3:	
   818 ;; *************** function _Time_Formate_to_STR_local *****************
   819 ;; Defined at:
   820 ;;		line 228 in file "main.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;		None
   823 ;; Auto vars:     Size  Location     Type
   824 ;;		None
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      unsigned char 
   827 ;; Registers used:
   828 ;;		wreg, status,2, status,0, pclath, cstack
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   834 ;;      Params:         0       0       0       0
   835 ;;      Locals:         0       0       0       0
   836 ;;      Temps:          0       1       0       0
   837 ;;      Totals:         0       1       0       0
   838 ;;Total ram usage:        1 bytes
   839 ;; Hardware stack levels used:    1
   840 ;; Hardware stack levels required when called:    3
   841 ;; This function calls:
   842 ;;		___lwdiv
   843 ;;		___lwmod
   844 ;; This function is called by:
   845 ;;		_main
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           
   850                           ;psect for function _Time_Formate_to_STR_local
   851  02FA                     _Time_Formate_to_STR_local:	
   852                           
   853                           ;main.c: 230: IST_TIME1[0]=(Time_local_Hr/10);
   854                           
   855                           ;incstack = 0
   856                           ; Regs used in _Time_Formate_to_STR_local: [wreg+status,2+status,0+pclath+cstack]
   857  02FA  300A               	movlw	10
   858  02FB  1283               	bcf	3,5	;RP0=0, select bank0
   859  02FC  1303               	bcf	3,6	;RP1=0, select bank0
   860  02FD  00C8               	movwf	___lwdiv@divisor
   861  02FE  3000               	movlw	0
   862  02FF  00C9               	movwf	___lwdiv@divisor+1
   863  0300  083F               	movf	_Time_local_Hr+1,w
   864  0301  00CB               	movwf	___lwdiv@dividend+1
   865  0302  083E               	movf	_Time_local_Hr,w
   866  0303  00CA               	movwf	___lwdiv@dividend
   867  0304  118A  240A  118A   	fcall	___lwdiv
   868  0307  1283               	bcf	3,5	;RP0=0, select bank0
   869  0308  1303               	bcf	3,6	;RP1=0, select bank0
   870  0309  0848               	movf	?___lwdiv,w
   871  030A  00D0               	movwf	??_Time_Formate_to_STR_local
   872  030B  0850               	movf	??_Time_Formate_to_STR_local,w
   873  030C  00A0               	movwf	_IST_TIME1
   874                           
   875                           ;main.c: 231: IST_TIME1[1]=(Time_local_Hr%10);
   876  030D  300A               	movlw	10
   877  030E  00C8               	movwf	___lwmod@divisor
   878  030F  3000               	movlw	0
   879  0310  00C9               	movwf	___lwmod@divisor+1
   880  0311  083F               	movf	_Time_local_Hr+1,w
   881  0312  00CB               	movwf	___lwmod@dividend+1
   882  0313  083E               	movf	_Time_local_Hr,w
   883  0314  00CA               	movwf	___lwmod@dividend
   884  0315  118A  2448  118A   	fcall	___lwmod
   885  0318  1283               	bcf	3,5	;RP0=0, select bank0
   886  0319  1303               	bcf	3,6	;RP1=0, select bank0
   887  031A  0848               	movf	?___lwmod,w
   888  031B  00D0               	movwf	??_Time_Formate_to_STR_local
   889  031C  0850               	movf	??_Time_Formate_to_STR_local,w
   890  031D  00A1               	movwf	_IST_TIME1+1
   891                           
   892                           ;main.c: 232: IST_TIME1[2]=(Time_local_Min/10);
   893  031E  300A               	movlw	10
   894  031F  00C8               	movwf	___lwdiv@divisor
   895  0320  3000               	movlw	0
   896  0321  00C9               	movwf	___lwdiv@divisor+1
   897  0322  083D               	movf	_Time_local_Min+1,w
   898  0323  00CB               	movwf	___lwdiv@dividend+1
   899  0324  083C               	movf	_Time_local_Min,w
   900  0325  00CA               	movwf	___lwdiv@dividend
   901  0326  118A  240A  118A   	fcall	___lwdiv
   902  0329  1283               	bcf	3,5	;RP0=0, select bank0
   903  032A  1303               	bcf	3,6	;RP1=0, select bank0
   904  032B  0848               	movf	?___lwdiv,w
   905  032C  00D0               	movwf	??_Time_Formate_to_STR_local
   906  032D  0850               	movf	??_Time_Formate_to_STR_local,w
   907  032E  00A2               	movwf	_IST_TIME1+2
   908                           
   909                           ;main.c: 233: IST_TIME1[3]=(Time_local_Min%10);
   910  032F  300A               	movlw	10
   911  0330  00C8               	movwf	___lwmod@divisor
   912  0331  3000               	movlw	0
   913  0332  00C9               	movwf	___lwmod@divisor+1
   914  0333  083D               	movf	_Time_local_Min+1,w
   915  0334  00CB               	movwf	___lwmod@dividend+1
   916  0335  083C               	movf	_Time_local_Min,w
   917  0336  00CA               	movwf	___lwmod@dividend
   918  0337  118A  2448  118A   	fcall	___lwmod
   919  033A  1283               	bcf	3,5	;RP0=0, select bank0
   920  033B  1303               	bcf	3,6	;RP1=0, select bank0
   921  033C  0848               	movf	?___lwmod,w
   922  033D  00D0               	movwf	??_Time_Formate_to_STR_local
   923  033E  0850               	movf	??_Time_Formate_to_STR_local,w
   924  033F  00A3               	movwf	_IST_TIME1+3
   925                           
   926                           ;main.c: 234: IST_TIME1[4]=(Time_local_Sec/10);
   927  0340  300A               	movlw	10
   928  0341  00C8               	movwf	___lwdiv@divisor
   929  0342  3000               	movlw	0
   930  0343  00C9               	movwf	___lwdiv@divisor+1
   931  0344  083B               	movf	_Time_local_Sec+1,w
   932  0345  00CB               	movwf	___lwdiv@dividend+1
   933  0346  083A               	movf	_Time_local_Sec,w
   934  0347  00CA               	movwf	___lwdiv@dividend
   935  0348  118A  240A  118A   	fcall	___lwdiv
   936  034B  1283               	bcf	3,5	;RP0=0, select bank0
   937  034C  1303               	bcf	3,6	;RP1=0, select bank0
   938  034D  0848               	movf	?___lwdiv,w
   939  034E  00D0               	movwf	??_Time_Formate_to_STR_local
   940  034F  0850               	movf	??_Time_Formate_to_STR_local,w
   941  0350  00A4               	movwf	_IST_TIME1+4
   942                           
   943                           ;main.c: 235: IST_TIME1[5]=(Time_local_Sec%10);
   944  0351  300A               	movlw	10
   945  0352  00C8               	movwf	___lwmod@divisor
   946  0353  3000               	movlw	0
   947  0354  00C9               	movwf	___lwmod@divisor+1
   948  0355  083B               	movf	_Time_local_Sec+1,w
   949  0356  00CB               	movwf	___lwmod@dividend+1
   950  0357  083A               	movf	_Time_local_Sec,w
   951  0358  00CA               	movwf	___lwmod@dividend
   952  0359  118A  2448         	fcall	___lwmod
   953  035B  1283               	bcf	3,5	;RP0=0, select bank0
   954  035C  1303               	bcf	3,6	;RP1=0, select bank0
   955  035D  0848               	movf	?___lwmod,w
   956  035E  00D0               	movwf	??_Time_Formate_to_STR_local
   957  035F  0850               	movf	??_Time_Formate_to_STR_local,w
   958  0360  00A5               	movwf	_IST_TIME1+5
   959  0361  0008               	return
   960  0362                     __end_of_Time_Formate_to_STR_local:	
   961                           
   962                           	psect	text4
   963  0448                     __ptext4:	
   964 ;; *************** function ___lwmod *****************
   965 ;; Defined at:
   966 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;  divisor         2    0[BANK0 ] unsigned int 
   969 ;;  dividend        2    2[BANK0 ] unsigned int 
   970 ;; Auto vars:     Size  Location     Type
   971 ;;  counter         1    5[BANK0 ] unsigned char 
   972 ;; Return value:  Size  Location     Type
   973 ;;                  2    0[BANK0 ] unsigned int 
   974 ;; Registers used:
   975 ;;		wreg, status,2, status,0
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   981 ;;      Params:         0       4       0       0
   982 ;;      Locals:         0       1       0       0
   983 ;;      Temps:          0       1       0       0
   984 ;;      Totals:         0       6       0       0
   985 ;;Total ram usage:        6 bytes
   986 ;; Hardware stack levels used:    1
   987 ;; Hardware stack levels required when called:    2
   988 ;; This function calls:
   989 ;;		Nothing
   990 ;; This function is called by:
   991 ;;		_Time_Formate_to_STR_local
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           
   996                           ;psect for function ___lwmod
   997  0448                     ___lwmod:	
   998                           
   999                           ;incstack = 0
  1000                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1001  0448  1283               	bcf	3,5	;RP0=0, select bank0
  1002  0449  1303               	bcf	3,6	;RP1=0, select bank0
  1003  044A  0848               	movf	___lwmod@divisor,w
  1004  044B  0449               	iorwf	___lwmod@divisor+1,w
  1005  044C  1903               	btfsc	3,2
  1006  044D  2C77               	goto	l1629
  1007  044E  01CD               	clrf	___lwmod@counter
  1008  044F  0ACD               	incf	___lwmod@counter,f
  1009  0450                     l1619:	
  1010  0450  1BC9               	btfsc	___lwmod@divisor+1,7
  1011  0451  2C5E               	goto	l1621
  1012  0452  3001               	movlw	1
  1013  0453                     u1615:	
  1014  0453  1003               	clrc
  1015  0454  0DC8               	rlf	___lwmod@divisor,f
  1016  0455  0DC9               	rlf	___lwmod@divisor+1,f
  1017  0456  3EFF               	addlw	-1
  1018  0457  1D03               	skipz
  1019  0458  2C53               	goto	u1615
  1020  0459  3001               	movlw	1
  1021  045A  00CC               	movwf	??___lwmod
  1022  045B  084C               	movf	??___lwmod,w
  1023  045C  07CD               	addwf	___lwmod@counter,f
  1024  045D  2C50               	goto	l1619
  1025  045E                     l1621:	
  1026  045E  0849               	movf	___lwmod@divisor+1,w
  1027  045F  024B               	subwf	___lwmod@dividend+1,w
  1028  0460  1D03               	skipz
  1029  0461  2C64               	goto	u1635
  1030  0462  0848               	movf	___lwmod@divisor,w
  1031  0463  024A               	subwf	___lwmod@dividend,w
  1032  0464                     u1635:	
  1033  0464  1C03               	skipc
  1034  0465  2C6C               	goto	l1625
  1035  0466  0848               	movf	___lwmod@divisor,w
  1036  0467  02CA               	subwf	___lwmod@dividend,f
  1037  0468  0849               	movf	___lwmod@divisor+1,w
  1038  0469  1C03               	skipc
  1039  046A  03CB               	decf	___lwmod@dividend+1,f
  1040  046B  02CB               	subwf	___lwmod@dividend+1,f
  1041  046C                     l1625:	
  1042  046C  3001               	movlw	1
  1043  046D                     u1645:	
  1044  046D  1003               	clrc
  1045  046E  0CC9               	rrf	___lwmod@divisor+1,f
  1046  046F  0CC8               	rrf	___lwmod@divisor,f
  1047  0470  3EFF               	addlw	-1
  1048  0471  1D03               	skipz
  1049  0472  2C6D               	goto	u1645
  1050  0473  3001               	movlw	1
  1051  0474  02CD               	subwf	___lwmod@counter,f
  1052  0475  1D03               	btfss	3,2
  1053  0476  2C5E               	goto	l1621
  1054  0477                     l1629:	
  1055  0477  084B               	movf	___lwmod@dividend+1,w
  1056  0478  00C9               	movwf	?___lwmod+1
  1057  0479  084A               	movf	___lwmod@dividend,w
  1058  047A  00C8               	movwf	?___lwmod
  1059  047B  0008               	return
  1060  047C                     __end_of___lwmod:	
  1061                           
  1062                           	psect	text5
  1063  040A                     __ptext5:	
  1064 ;; *************** function ___lwdiv *****************
  1065 ;; Defined at:
  1066 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;  divisor         2    0[BANK0 ] unsigned int 
  1069 ;;  dividend        2    2[BANK0 ] unsigned int 
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;  quotient        2    6[BANK0 ] unsigned int 
  1072 ;;  counter         1    5[BANK0 ] unsigned char 
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  2    0[BANK0 ] unsigned int 
  1075 ;; Registers used:
  1076 ;;		wreg, status,2, status,0
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1082 ;;      Params:         0       4       0       0
  1083 ;;      Locals:         0       3       0       0
  1084 ;;      Temps:          0       1       0       0
  1085 ;;      Totals:         0       8       0       0
  1086 ;;Total ram usage:        8 bytes
  1087 ;; Hardware stack levels used:    1
  1088 ;; Hardware stack levels required when called:    2
  1089 ;; This function calls:
  1090 ;;		Nothing
  1091 ;; This function is called by:
  1092 ;;		_Time_Formate_to_STR_local
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           
  1097                           ;psect for function ___lwdiv
  1098  040A                     ___lwdiv:	
  1099                           
  1100                           ;incstack = 0
  1101                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1102  040A  1283               	bcf	3,5	;RP0=0, select bank0
  1103  040B  1303               	bcf	3,6	;RP1=0, select bank0
  1104  040C  01CE               	clrf	___lwdiv@quotient
  1105  040D  01CF               	clrf	___lwdiv@quotient+1
  1106  040E  0848               	movf	___lwdiv@divisor,w
  1107  040F  0449               	iorwf	___lwdiv@divisor+1,w
  1108  0410  1903               	btfsc	3,2
  1109  0411  2C43               	goto	l1607
  1110  0412  01CD               	clrf	___lwdiv@counter
  1111  0413  0ACD               	incf	___lwdiv@counter,f
  1112  0414                     l1595:	
  1113  0414  1BC9               	btfsc	___lwdiv@divisor+1,7
  1114  0415  2C22               	goto	l1597
  1115  0416  3001               	movlw	1
  1116  0417                     u1545:	
  1117  0417  1003               	clrc
  1118  0418  0DC8               	rlf	___lwdiv@divisor,f
  1119  0419  0DC9               	rlf	___lwdiv@divisor+1,f
  1120  041A  3EFF               	addlw	-1
  1121  041B  1D03               	skipz
  1122  041C  2C17               	goto	u1545
  1123  041D  3001               	movlw	1
  1124  041E  00CC               	movwf	??___lwdiv
  1125  041F  084C               	movf	??___lwdiv,w
  1126  0420  07CD               	addwf	___lwdiv@counter,f
  1127  0421  2C14               	goto	l1595
  1128  0422                     l1597:	
  1129  0422  3001               	movlw	1
  1130  0423                     u1565:	
  1131  0423  1003               	clrc
  1132  0424  0DCE               	rlf	___lwdiv@quotient,f
  1133  0425  0DCF               	rlf	___lwdiv@quotient+1,f
  1134  0426  3EFF               	addlw	-1
  1135  0427  1D03               	skipz
  1136  0428  2C23               	goto	u1565
  1137  0429  0849               	movf	___lwdiv@divisor+1,w
  1138  042A  024B               	subwf	___lwdiv@dividend+1,w
  1139  042B  1D03               	skipz
  1140  042C  2C2F               	goto	u1575
  1141  042D  0848               	movf	___lwdiv@divisor,w
  1142  042E  024A               	subwf	___lwdiv@dividend,w
  1143  042F                     u1575:	
  1144  042F  1C03               	skipc
  1145  0430  2C38               	goto	l1603
  1146  0431  0848               	movf	___lwdiv@divisor,w
  1147  0432  02CA               	subwf	___lwdiv@dividend,f
  1148  0433  0849               	movf	___lwdiv@divisor+1,w
  1149  0434  1C03               	skipc
  1150  0435  03CB               	decf	___lwdiv@dividend+1,f
  1151  0436  02CB               	subwf	___lwdiv@dividend+1,f
  1152  0437  144E               	bsf	___lwdiv@quotient,0
  1153  0438                     l1603:	
  1154  0438  3001               	movlw	1
  1155  0439                     u1585:	
  1156  0439  1003               	clrc
  1157  043A  0CC9               	rrf	___lwdiv@divisor+1,f
  1158  043B  0CC8               	rrf	___lwdiv@divisor,f
  1159  043C  3EFF               	addlw	-1
  1160  043D  1D03               	skipz
  1161  043E  2C39               	goto	u1585
  1162  043F  3001               	movlw	1
  1163  0440  02CD               	subwf	___lwdiv@counter,f
  1164  0441  1D03               	btfss	3,2
  1165  0442  2C22               	goto	l1597
  1166  0443                     l1607:	
  1167  0443  084F               	movf	___lwdiv@quotient+1,w
  1168  0444  00C9               	movwf	?___lwdiv+1
  1169  0445  084E               	movf	___lwdiv@quotient,w
  1170  0446  00C8               	movwf	?___lwdiv
  1171  0447  0008               	return
  1172  0448                     __end_of___lwdiv:	
  1173                           
  1174                           	psect	text6
  1175  019D                     __ptext6:	
  1176 ;; *************** function _Time_Formate_to_STR *****************
  1177 ;; Defined at:
  1178 ;;		line 218 in file "main.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;		None
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;		None
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      unsigned char 
  1185 ;; Registers used:
  1186 ;;		wreg, status,2, status,0, pclath, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1192 ;;      Params:         0       0       0       0
  1193 ;;      Locals:         0       0       0       0
  1194 ;;      Temps:          0       3       0       0
  1195 ;;      Totals:         0       3       0       0
  1196 ;;Total ram usage:        3 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; Hardware stack levels required when called:    3
  1199 ;; This function calls:
  1200 ;;		___awdiv
  1201 ;;		___awmod
  1202 ;; This function is called by:
  1203 ;;		_main
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           
  1208                           ;psect for function _Time_Formate_to_STR
  1209  019D                     _Time_Formate_to_STR:	
  1210                           
  1211                           ;main.c: 220: IST_TIME1[0]=(Time_Hr/10);
  1212                           
  1213                           ;incstack = 0
  1214                           ; Regs used in _Time_Formate_to_STR: [wreg+status,2+status,0+pclath+cstack]
  1215  019D  300A               	movlw	10
  1216  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1217  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1218  01A0  00C8               	movwf	___awdiv@divisor
  1219  01A1  3000               	movlw	0
  1220  01A2  00C9               	movwf	___awdiv@divisor+1
  1221  01A3  0847               	movf	_Time_Hr,w
  1222  01A4  00D1               	movwf	??_Time_Formate_to_STR
  1223  01A5  01D2               	clrf	??_Time_Formate_to_STR+1
  1224  01A6  0851               	movf	??_Time_Formate_to_STR,w
  1225  01A7  00CA               	movwf	___awdiv@dividend
  1226  01A8  0852               	movf	??_Time_Formate_to_STR+1,w
  1227  01A9  00CB               	movwf	___awdiv@dividend+1
  1228  01AA  118A  2362  118A   	fcall	___awdiv
  1229  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1230  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1231  01AF  0848               	movf	?___awdiv,w
  1232  01B0  00D3               	movwf	??_Time_Formate_to_STR+2
  1233  01B1  0853               	movf	??_Time_Formate_to_STR+2,w
  1234  01B2  00A0               	movwf	_IST_TIME1
  1235                           
  1236                           ;main.c: 221: IST_TIME1[1]=(Time_Hr%10);
  1237  01B3  300A               	movlw	10
  1238  01B4  00C8               	movwf	___awmod@divisor
  1239  01B5  3000               	movlw	0
  1240  01B6  00C9               	movwf	___awmod@divisor+1
  1241  01B7  0847               	movf	_Time_Hr,w
  1242  01B8  00D1               	movwf	??_Time_Formate_to_STR
  1243  01B9  01D2               	clrf	??_Time_Formate_to_STR+1
  1244  01BA  0851               	movf	??_Time_Formate_to_STR,w
  1245  01BB  00CA               	movwf	___awmod@dividend
  1246  01BC  0852               	movf	??_Time_Formate_to_STR+1,w
  1247  01BD  00CB               	movwf	___awmod@dividend+1
  1248  01BE  118A  23BD  118A   	fcall	___awmod
  1249  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1250  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1251  01C3  0848               	movf	?___awmod,w
  1252  01C4  00D3               	movwf	??_Time_Formate_to_STR+2
  1253  01C5  0853               	movf	??_Time_Formate_to_STR+2,w
  1254  01C6  00A1               	movwf	_IST_TIME1+1
  1255                           
  1256                           ;main.c: 222: IST_TIME1[2]=(Time_Min/10);
  1257  01C7  300A               	movlw	10
  1258  01C8  00C8               	movwf	___awdiv@divisor
  1259  01C9  3000               	movlw	0
  1260  01CA  00C9               	movwf	___awdiv@divisor+1
  1261  01CB  0846               	movf	_Time_Min,w
  1262  01CC  00D1               	movwf	??_Time_Formate_to_STR
  1263  01CD  01D2               	clrf	??_Time_Formate_to_STR+1
  1264  01CE  0851               	movf	??_Time_Formate_to_STR,w
  1265  01CF  00CA               	movwf	___awdiv@dividend
  1266  01D0  0852               	movf	??_Time_Formate_to_STR+1,w
  1267  01D1  00CB               	movwf	___awdiv@dividend+1
  1268  01D2  118A  2362  118A   	fcall	___awdiv
  1269  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1270  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  1271  01D7  0848               	movf	?___awdiv,w
  1272  01D8  00D3               	movwf	??_Time_Formate_to_STR+2
  1273  01D9  0853               	movf	??_Time_Formate_to_STR+2,w
  1274  01DA  00A2               	movwf	_IST_TIME1+2
  1275                           
  1276                           ;main.c: 223: IST_TIME1[3]=(Time_Min%10);
  1277  01DB  300A               	movlw	10
  1278  01DC  00C8               	movwf	___awmod@divisor
  1279  01DD  3000               	movlw	0
  1280  01DE  00C9               	movwf	___awmod@divisor+1
  1281  01DF  0846               	movf	_Time_Min,w
  1282  01E0  00D1               	movwf	??_Time_Formate_to_STR
  1283  01E1  01D2               	clrf	??_Time_Formate_to_STR+1
  1284  01E2  0851               	movf	??_Time_Formate_to_STR,w
  1285  01E3  00CA               	movwf	___awmod@dividend
  1286  01E4  0852               	movf	??_Time_Formate_to_STR+1,w
  1287  01E5  00CB               	movwf	___awmod@dividend+1
  1288  01E6  118A  23BD  118A   	fcall	___awmod
  1289  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  1290  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  1291  01EB  0848               	movf	?___awmod,w
  1292  01EC  00D3               	movwf	??_Time_Formate_to_STR+2
  1293  01ED  0853               	movf	??_Time_Formate_to_STR+2,w
  1294  01EE  00A3               	movwf	_IST_TIME1+3
  1295                           
  1296                           ;main.c: 224: IST_TIME1[4]=(Time_Sec/10);
  1297  01EF  300A               	movlw	10
  1298  01F0  00C8               	movwf	___awdiv@divisor
  1299  01F1  3000               	movlw	0
  1300  01F2  00C9               	movwf	___awdiv@divisor+1
  1301  01F3  0845               	movf	_Time_Sec,w
  1302  01F4  00D1               	movwf	??_Time_Formate_to_STR
  1303  01F5  01D2               	clrf	??_Time_Formate_to_STR+1
  1304  01F6  0851               	movf	??_Time_Formate_to_STR,w
  1305  01F7  00CA               	movwf	___awdiv@dividend
  1306  01F8  0852               	movf	??_Time_Formate_to_STR+1,w
  1307  01F9  00CB               	movwf	___awdiv@dividend+1
  1308  01FA  118A  2362  118A   	fcall	___awdiv
  1309  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1310  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1311  01FF  0848               	movf	?___awdiv,w
  1312  0200  00D3               	movwf	??_Time_Formate_to_STR+2
  1313  0201  0853               	movf	??_Time_Formate_to_STR+2,w
  1314  0202  00A4               	movwf	_IST_TIME1+4
  1315                           
  1316                           ;main.c: 225: IST_TIME1[5]=(Time_Sec%10);
  1317  0203  300A               	movlw	10
  1318  0204  00C8               	movwf	___awmod@divisor
  1319  0205  3000               	movlw	0
  1320  0206  00C9               	movwf	___awmod@divisor+1
  1321  0207  0845               	movf	_Time_Sec,w
  1322  0208  00D1               	movwf	??_Time_Formate_to_STR
  1323  0209  01D2               	clrf	??_Time_Formate_to_STR+1
  1324  020A  0851               	movf	??_Time_Formate_to_STR,w
  1325  020B  00CA               	movwf	___awmod@dividend
  1326  020C  0852               	movf	??_Time_Formate_to_STR+1,w
  1327  020D  00CB               	movwf	___awmod@dividend+1
  1328  020E  118A  23BD         	fcall	___awmod
  1329  0210  1283               	bcf	3,5	;RP0=0, select bank0
  1330  0211  1303               	bcf	3,6	;RP1=0, select bank0
  1331  0212  0848               	movf	?___awmod,w
  1332  0213  00D3               	movwf	??_Time_Formate_to_STR+2
  1333  0214  0853               	movf	??_Time_Formate_to_STR+2,w
  1334  0215  00A5               	movwf	_IST_TIME1+5
  1335  0216  0008               	return
  1336  0217                     __end_of_Time_Formate_to_STR:	
  1337                           
  1338                           	psect	text7
  1339  03BD                     __ptext7:	
  1340 ;; *************** function ___awmod *****************
  1341 ;; Defined at:
  1342 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awmod.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  divisor         2    0[BANK0 ] int 
  1345 ;;  dividend        2    2[BANK0 ] int 
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  sign            1    6[BANK0 ] unsigned char 
  1348 ;;  counter         1    5[BANK0 ] unsigned char 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  2    0[BANK0 ] int 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, status,0
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1358 ;;      Params:         0       4       0       0
  1359 ;;      Locals:         0       2       0       0
  1360 ;;      Temps:          0       1       0       0
  1361 ;;      Totals:         0       7       0       0
  1362 ;;Total ram usage:        7 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; Hardware stack levels required when called:    2
  1365 ;; This function calls:
  1366 ;;		Nothing
  1367 ;; This function is called by:
  1368 ;;		_Time_Formate_to_STR
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           
  1373                           ;psect for function ___awmod
  1374  03BD                     ___awmod:	
  1375                           
  1376                           ;incstack = 0
  1377                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1378  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  1379  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  1380  03BF  01CE               	clrf	___awmod@sign
  1381  03C0  1FCB               	btfss	___awmod@dividend+1,7
  1382  03C1  2BC9               	goto	l1555
  1383  03C2  09CA               	comf	___awmod@dividend,f
  1384  03C3  09CB               	comf	___awmod@dividend+1,f
  1385  03C4  0ACA               	incf	___awmod@dividend,f
  1386  03C5  1903               	skipnz
  1387  03C6  0ACB               	incf	___awmod@dividend+1,f
  1388  03C7  01CE               	clrf	___awmod@sign
  1389  03C8  0ACE               	incf	___awmod@sign,f
  1390  03C9                     l1555:	
  1391  03C9  1FC9               	btfss	___awmod@divisor+1,7
  1392  03CA  2BD0               	goto	l1559
  1393  03CB  09C8               	comf	___awmod@divisor,f
  1394  03CC  09C9               	comf	___awmod@divisor+1,f
  1395  03CD  0AC8               	incf	___awmod@divisor,f
  1396  03CE  1903               	skipnz
  1397  03CF  0AC9               	incf	___awmod@divisor+1,f
  1398  03D0                     l1559:	
  1399  03D0  0848               	movf	___awmod@divisor,w
  1400  03D1  0449               	iorwf	___awmod@divisor+1,w
  1401  03D2  1903               	btfsc	3,2
  1402  03D3  2BFD               	goto	l1577
  1403  03D4  01CD               	clrf	___awmod@counter
  1404  03D5  0ACD               	incf	___awmod@counter,f
  1405  03D6                     l1567:	
  1406  03D6  1BC9               	btfsc	___awmod@divisor+1,7
  1407  03D7  2BE4               	goto	l1569
  1408  03D8  3001               	movlw	1
  1409  03D9                     u1475:	
  1410  03D9  1003               	clrc
  1411  03DA  0DC8               	rlf	___awmod@divisor,f
  1412  03DB  0DC9               	rlf	___awmod@divisor+1,f
  1413  03DC  3EFF               	addlw	-1
  1414  03DD  1D03               	skipz
  1415  03DE  2BD9               	goto	u1475
  1416  03DF  3001               	movlw	1
  1417  03E0  00CC               	movwf	??___awmod
  1418  03E1  084C               	movf	??___awmod,w
  1419  03E2  07CD               	addwf	___awmod@counter,f
  1420  03E3  2BD6               	goto	l1567
  1421  03E4                     l1569:	
  1422  03E4  0849               	movf	___awmod@divisor+1,w
  1423  03E5  024B               	subwf	___awmod@dividend+1,w
  1424  03E6  1D03               	skipz
  1425  03E7  2BEA               	goto	u1495
  1426  03E8  0848               	movf	___awmod@divisor,w
  1427  03E9  024A               	subwf	___awmod@dividend,w
  1428  03EA                     u1495:	
  1429  03EA  1C03               	skipc
  1430  03EB  2BF2               	goto	l1573
  1431  03EC  0848               	movf	___awmod@divisor,w
  1432  03ED  02CA               	subwf	___awmod@dividend,f
  1433  03EE  0849               	movf	___awmod@divisor+1,w
  1434  03EF  1C03               	skipc
  1435  03F0  03CB               	decf	___awmod@dividend+1,f
  1436  03F1  02CB               	subwf	___awmod@dividend+1,f
  1437  03F2                     l1573:	
  1438  03F2  3001               	movlw	1
  1439  03F3                     u1505:	
  1440  03F3  1003               	clrc
  1441  03F4  0CC9               	rrf	___awmod@divisor+1,f
  1442  03F5  0CC8               	rrf	___awmod@divisor,f
  1443  03F6  3EFF               	addlw	-1
  1444  03F7  1D03               	skipz
  1445  03F8  2BF3               	goto	u1505
  1446  03F9  3001               	movlw	1
  1447  03FA  02CD               	subwf	___awmod@counter,f
  1448  03FB  1D03               	btfss	3,2
  1449  03FC  2BE4               	goto	l1569
  1450  03FD                     l1577:	
  1451  03FD  084E               	movf	___awmod@sign,w
  1452  03FE  1903               	btfsc	3,2
  1453  03FF  2C05               	goto	l1581
  1454  0400  09CA               	comf	___awmod@dividend,f
  1455  0401  09CB               	comf	___awmod@dividend+1,f
  1456  0402  0ACA               	incf	___awmod@dividend,f
  1457  0403  1903               	skipnz
  1458  0404  0ACB               	incf	___awmod@dividend+1,f
  1459  0405                     l1581:	
  1460  0405  084B               	movf	___awmod@dividend+1,w
  1461  0406  00C9               	movwf	?___awmod+1
  1462  0407  084A               	movf	___awmod@dividend,w
  1463  0408  00C8               	movwf	?___awmod
  1464  0409  0008               	return
  1465  040A                     __end_of___awmod:	
  1466                           
  1467                           	psect	text8
  1468  0362                     __ptext8:	
  1469 ;; *************** function ___awdiv *****************
  1470 ;; Defined at:
  1471 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awdiv.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  divisor         2    0[BANK0 ] int 
  1474 ;;  dividend        2    2[BANK0 ] int 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  quotient        2    7[BANK0 ] int 
  1477 ;;  sign            1    6[BANK0 ] unsigned char 
  1478 ;;  counter         1    5[BANK0 ] unsigned char 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  2    0[BANK0 ] int 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1488 ;;      Params:         0       4       0       0
  1489 ;;      Locals:         0       4       0       0
  1490 ;;      Temps:          0       1       0       0
  1491 ;;      Totals:         0       9       0       0
  1492 ;;Total ram usage:        9 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    2
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_Time_Formate_to_STR
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           
  1503                           ;psect for function ___awdiv
  1504  0362                     ___awdiv:	
  1505                           
  1506                           ;incstack = 0
  1507                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1508  0362  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0363  1303               	bcf	3,6	;RP1=0, select bank0
  1510  0364  01CE               	clrf	___awdiv@sign
  1511  0365  1FC9               	btfss	___awdiv@divisor+1,7
  1512  0366  2B6E               	goto	l1511
  1513  0367  09C8               	comf	___awdiv@divisor,f
  1514  0368  09C9               	comf	___awdiv@divisor+1,f
  1515  0369  0AC8               	incf	___awdiv@divisor,f
  1516  036A  1903               	skipnz
  1517  036B  0AC9               	incf	___awdiv@divisor+1,f
  1518  036C  01CE               	clrf	___awdiv@sign
  1519  036D  0ACE               	incf	___awdiv@sign,f
  1520  036E                     l1511:	
  1521  036E  1FCB               	btfss	___awdiv@dividend+1,7
  1522  036F  2B79               	goto	l1517
  1523  0370  09CA               	comf	___awdiv@dividend,f
  1524  0371  09CB               	comf	___awdiv@dividend+1,f
  1525  0372  0ACA               	incf	___awdiv@dividend,f
  1526  0373  1903               	skipnz
  1527  0374  0ACB               	incf	___awdiv@dividend+1,f
  1528  0375  3001               	movlw	1
  1529  0376  00CC               	movwf	??___awdiv
  1530  0377  084C               	movf	??___awdiv,w
  1531  0378  06CE               	xorwf	___awdiv@sign,f
  1532  0379                     l1517:	
  1533  0379  01CF               	clrf	___awdiv@quotient
  1534  037A  01D0               	clrf	___awdiv@quotient+1
  1535  037B  0848               	movf	___awdiv@divisor,w
  1536  037C  0449               	iorwf	___awdiv@divisor+1,w
  1537  037D  1903               	btfsc	3,2
  1538  037E  2BB0               	goto	l1539
  1539  037F  01CD               	clrf	___awdiv@counter
  1540  0380  0ACD               	incf	___awdiv@counter,f
  1541  0381                     l1527:	
  1542  0381  1BC9               	btfsc	___awdiv@divisor+1,7
  1543  0382  2B8F               	goto	l1529
  1544  0383  3001               	movlw	1
  1545  0384                     u1375:	
  1546  0384  1003               	clrc
  1547  0385  0DC8               	rlf	___awdiv@divisor,f
  1548  0386  0DC9               	rlf	___awdiv@divisor+1,f
  1549  0387  3EFF               	addlw	-1
  1550  0388  1D03               	skipz
  1551  0389  2B84               	goto	u1375
  1552  038A  3001               	movlw	1
  1553  038B  00CC               	movwf	??___awdiv
  1554  038C  084C               	movf	??___awdiv,w
  1555  038D  07CD               	addwf	___awdiv@counter,f
  1556  038E  2B81               	goto	l1527
  1557  038F                     l1529:	
  1558  038F  3001               	movlw	1
  1559  0390                     u1395:	
  1560  0390  1003               	clrc
  1561  0391  0DCF               	rlf	___awdiv@quotient,f
  1562  0392  0DD0               	rlf	___awdiv@quotient+1,f
  1563  0393  3EFF               	addlw	-1
  1564  0394  1D03               	skipz
  1565  0395  2B90               	goto	u1395
  1566  0396  0849               	movf	___awdiv@divisor+1,w
  1567  0397  024B               	subwf	___awdiv@dividend+1,w
  1568  0398  1D03               	skipz
  1569  0399  2B9C               	goto	u1405
  1570  039A  0848               	movf	___awdiv@divisor,w
  1571  039B  024A               	subwf	___awdiv@dividend,w
  1572  039C                     u1405:	
  1573  039C  1C03               	skipc
  1574  039D  2BA5               	goto	l1535
  1575  039E  0848               	movf	___awdiv@divisor,w
  1576  039F  02CA               	subwf	___awdiv@dividend,f
  1577  03A0  0849               	movf	___awdiv@divisor+1,w
  1578  03A1  1C03               	skipc
  1579  03A2  03CB               	decf	___awdiv@dividend+1,f
  1580  03A3  02CB               	subwf	___awdiv@dividend+1,f
  1581  03A4  144F               	bsf	___awdiv@quotient,0
  1582  03A5                     l1535:	
  1583  03A5  3001               	movlw	1
  1584  03A6                     u1415:	
  1585  03A6  1003               	clrc
  1586  03A7  0CC9               	rrf	___awdiv@divisor+1,f
  1587  03A8  0CC8               	rrf	___awdiv@divisor,f
  1588  03A9  3EFF               	addlw	-1
  1589  03AA  1D03               	skipz
  1590  03AB  2BA6               	goto	u1415
  1591  03AC  3001               	movlw	1
  1592  03AD  02CD               	subwf	___awdiv@counter,f
  1593  03AE  1D03               	btfss	3,2
  1594  03AF  2B8F               	goto	l1529
  1595  03B0                     l1539:	
  1596  03B0  084E               	movf	___awdiv@sign,w
  1597  03B1  1903               	btfsc	3,2
  1598  03B2  2BB8               	goto	l1543
  1599  03B3  09CF               	comf	___awdiv@quotient,f
  1600  03B4  09D0               	comf	___awdiv@quotient+1,f
  1601  03B5  0ACF               	incf	___awdiv@quotient,f
  1602  03B6  1903               	skipnz
  1603  03B7  0AD0               	incf	___awdiv@quotient+1,f
  1604  03B8                     l1543:	
  1605  03B8  0850               	movf	___awdiv@quotient+1,w
  1606  03B9  00C9               	movwf	?___awdiv+1
  1607  03BA  084F               	movf	___awdiv@quotient,w
  1608  03BB  00C8               	movwf	?___awdiv
  1609  03BC  0008               	return
  1610  03BD                     __end_of___awdiv:	
  1611                           
  1612                           	psect	text9
  1613  028B                     __ptext9:	
  1614 ;; *************** function _Tick *****************
  1615 ;; Defined at:
  1616 ;;		line 106 in file "main.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;		None
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;		None
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, status,0
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1630 ;;      Params:         0       0       0       0
  1631 ;;      Locals:         0       0       0       0
  1632 ;;      Temps:          0       0       0       0
  1633 ;;      Totals:         0       0       0       0
  1634 ;;Total ram usage:        0 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; Hardware stack levels required when called:    2
  1637 ;; This function calls:
  1638 ;;		Nothing
  1639 ;; This function is called by:
  1640 ;;		_main
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           
  1645                           ;psect for function _Tick
  1646  028B                     _Tick:	
  1647                           
  1648                           ;main.c: 108: Temp_Cnt++;
  1649                           
  1650                           ;incstack = 0
  1651                           ; Regs used in _Tick: [wreg+status,2+status,0]
  1652  028B  3001               	movlw	1
  1653  028C  1283               	bcf	3,5	;RP0=0, select bank0
  1654  028D  1303               	bcf	3,6	;RP1=0, select bank0
  1655  028E  07B8               	addwf	_Temp_Cnt,f
  1656  028F  1803               	skipnc
  1657  0290  0AB9               	incf	_Temp_Cnt+1,f
  1658  0291  3000               	movlw	0
  1659  0292  07B9               	addwf	_Temp_Cnt+1,f
  1660                           
  1661                           ;main.c: 109: if(Temp_Cnt > 45)
  1662  0293  3000               	movlw	0
  1663  0294  0239               	subwf	_Temp_Cnt+1,w
  1664  0295  302E               	movlw	46
  1665  0296  1903               	skipnz
  1666  0297  0238               	subwf	_Temp_Cnt,w
  1667  0298  1C03               	skipc
  1668  0299  2AE7               	goto	l1695
  1669                           
  1670                           ;main.c: 110: {
  1671                           ;main.c: 111: sec++;
  1672  029A  3001               	movlw	1
  1673  029B  07B4               	addwf	_sec,f
  1674  029C  1803               	skipnc
  1675  029D  0AB5               	incf	_sec+1,f
  1676  029E  3000               	movlw	0
  1677  029F  07B5               	addwf	_sec+1,f
  1678                           
  1679                           ;main.c: 112: Time_local_Sec++;
  1680  02A0  3001               	movlw	1
  1681  02A1  07BA               	addwf	_Time_local_Sec,f
  1682  02A2  1803               	skipnc
  1683  02A3  0ABB               	incf	_Time_local_Sec+1,f
  1684  02A4  3000               	movlw	0
  1685  02A5  07BB               	addwf	_Time_local_Sec+1,f
  1686                           
  1687                           ;main.c: 113: Temp_Cnt=0; error_cnt++;
  1688  02A6  01B8               	clrf	_Temp_Cnt
  1689  02A7  01B9               	clrf	_Temp_Cnt+1
  1690  02A8  3001               	movlw	1
  1691  02A9  07B6               	addwf	_error_cnt,f
  1692  02AA  1803               	skipnc
  1693  02AB  0AB7               	incf	_error_cnt+1,f
  1694  02AC  3000               	movlw	0
  1695  02AD  07B7               	addwf	_error_cnt+1,f
  1696                           
  1697                           ;main.c: 114: PORTBbits.RB4=~PORTBbits.RB4;
  1698  02AE  1003               	clrc
  1699  02AF  1E06               	btfss	6,4	;volatile
  1700  02B0  1403               	setc
  1701  02B1  1C03               	btfss	3,0
  1702  02B2  2AB7               	goto	u1670
  1703  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  1704  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  1705  02B5  1606               	bsf	6,4	;volatile
  1706  02B6  2ABA               	goto	l1679
  1707  02B7                     u1670:	
  1708  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1709  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1710  02B9  1206               	bcf	6,4	;volatile
  1711  02BA                     l1679:	
  1712                           
  1713                           ;main.c: 115: if(Time_local_Sec > 59)
  1714  02BA  3000               	movlw	0
  1715  02BB  023B               	subwf	_Time_local_Sec+1,w
  1716  02BC  303C               	movlw	60
  1717  02BD  1903               	skipnz
  1718  02BE  023A               	subwf	_Time_local_Sec,w
  1719  02BF  1C03               	skipc
  1720  02C0  2AE7               	goto	l1695
  1721                           
  1722                           ;main.c: 116: {
  1723                           ;main.c: 117: Time_local_Sec=0;
  1724  02C1  01BA               	clrf	_Time_local_Sec
  1725  02C2  01BB               	clrf	_Time_local_Sec+1
  1726                           
  1727                           ;main.c: 118: Time_local_Min++;
  1728  02C3  3001               	movlw	1
  1729  02C4  07BC               	addwf	_Time_local_Min,f
  1730  02C5  1803               	skipnc
  1731  02C6  0ABD               	incf	_Time_local_Min+1,f
  1732  02C7  3000               	movlw	0
  1733  02C8  07BD               	addwf	_Time_local_Min+1,f
  1734                           
  1735                           ;main.c: 119: if(Time_local_Min > 59)
  1736  02C9  3000               	movlw	0
  1737  02CA  023D               	subwf	_Time_local_Min+1,w
  1738  02CB  303C               	movlw	60
  1739  02CC  1903               	skipnz
  1740  02CD  023C               	subwf	_Time_local_Min,w
  1741  02CE  1C03               	skipc
  1742  02CF  2AE7               	goto	l1695
  1743                           
  1744                           ;main.c: 120: {
  1745                           ;main.c: 121: Time_local_Hr++;
  1746  02D0  3001               	movlw	1
  1747  02D1  07BE               	addwf	_Time_local_Hr,f
  1748  02D2  1803               	skipnc
  1749  02D3  0ABF               	incf	_Time_local_Hr+1,f
  1750  02D4  3000               	movlw	0
  1751  02D5  07BF               	addwf	_Time_local_Hr+1,f
  1752                           
  1753                           ;main.c: 122: Time_local_Min =0;
  1754  02D6  01BC               	clrf	_Time_local_Min
  1755  02D7  01BD               	clrf	_Time_local_Min+1
  1756                           
  1757                           ;main.c: 123: Time_local_Sec=0;
  1758  02D8  01BA               	clrf	_Time_local_Sec
  1759  02D9  01BB               	clrf	_Time_local_Sec+1
  1760                           
  1761                           ;main.c: 124: if(Time_local_Hr > 12)
  1762  02DA  3000               	movlw	0
  1763  02DB  023F               	subwf	_Time_local_Hr+1,w
  1764  02DC  300D               	movlw	13
  1765  02DD  1903               	skipnz
  1766  02DE  023E               	subwf	_Time_local_Hr,w
  1767  02DF  1C03               	skipc
  1768  02E0  2AE7               	goto	l1695
  1769                           
  1770                           ;main.c: 125: {
  1771                           ;main.c: 126: Time_local_Hr=0;
  1772  02E1  01BE               	clrf	_Time_local_Hr
  1773  02E2  01BF               	clrf	_Time_local_Hr+1
  1774                           
  1775                           ;main.c: 127: Time_local_Min=0;
  1776  02E3  01BC               	clrf	_Time_local_Min
  1777  02E4  01BD               	clrf	_Time_local_Min+1
  1778                           
  1779                           ;main.c: 128: Time_local_Sec=0;
  1780  02E5  01BA               	clrf	_Time_local_Sec
  1781  02E6  01BB               	clrf	_Time_local_Sec+1
  1782  02E7                     l1695:	
  1783                           
  1784                           ;main.c: 129: }
  1785                           ;main.c: 130: }
  1786                           ;main.c: 131: }
  1787                           ;main.c: 132: }
  1788                           ;main.c: 133: if(sec > 1000)
  1789  02E7  3003               	movlw	3
  1790  02E8  0235               	subwf	_sec+1,w
  1791  02E9  30E9               	movlw	233
  1792  02EA  1903               	skipnz
  1793  02EB  0234               	subwf	_sec,w
  1794  02EC  1C03               	skipc
  1795  02ED  2AF0               	goto	l1699
  1796                           
  1797                           ;main.c: 134: sec=0;
  1798  02EE  01B4               	clrf	_sec
  1799  02EF  01B5               	clrf	_sec+1
  1800  02F0                     l1699:	
  1801                           
  1802                           ;main.c: 135: if(error_cnt >9)
  1803  02F0  3000               	movlw	0
  1804  02F1  0237               	subwf	_error_cnt+1,w
  1805  02F2  300A               	movlw	10
  1806  02F3  1903               	skipnz
  1807  02F4  0236               	subwf	_error_cnt,w
  1808  02F5  1C03               	skipc
  1809  02F6  0008               	return
  1810                           
  1811                           ;main.c: 136: error_cnt=0;
  1812  02F7  01B6               	clrf	_error_cnt
  1813  02F8  01B7               	clrf	_error_cnt+1
  1814  02F9  0008               	return
  1815  02FA                     __end_of_Tick:	
  1816                           
  1817                           	psect	text10
  1818  00F2                     __ptext10:	
  1819 ;; *************** function _IST_Time_Formate *****************
  1820 ;; Defined at:
  1821 ;;		line 237 in file "main.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;		None
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;		None
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  1    wreg      void 
  1828 ;; Registers used:
  1829 ;;		wreg, status,2, status,0, pclath, cstack
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1835 ;;      Params:         0       0       0       0
  1836 ;;      Locals:         0       0       0       0
  1837 ;;      Temps:          0       2       0       0
  1838 ;;      Totals:         0       2       0       0
  1839 ;;Total ram usage:        2 bytes
  1840 ;; Hardware stack levels used:    1
  1841 ;; Hardware stack levels required when called:    3
  1842 ;; This function calls:
  1843 ;;		___bmul
  1844 ;; This function is called by:
  1845 ;;		_main
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           
  1850                           ;psect for function _IST_Time_Formate
  1851  00F2                     _IST_Time_Formate:	
  1852                           
  1853                           ;main.c: 239: Time_Temp1=Receive_buffer[0]-48;
  1854                           
  1855                           ;incstack = 0
  1856                           ; Regs used in _IST_Time_Formate: [wreg+status,2+status,0+pclath+cstack]
  1857  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  1858  00F3  1303               	bcf	3,6	;RP1=0, select bank1
  1859  00F4  0820               	movf	_Receive_buffer^(0+128),w
  1860  00F5  3ED0               	addlw	208
  1861  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1862  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1863  00F8  00CC               	movwf	??_IST_Time_Formate
  1864  00F9  084C               	movf	??_IST_Time_Formate,w
  1865  00FA  00F5               	movwf	_Time_Temp1
  1866                           
  1867                           ;main.c: 240: Time_Temp2=Receive_buffer[1]-48;
  1868  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  1869  00FC  1303               	bcf	3,6	;RP1=0, select bank1
  1870  00FD  0821               	movf	(_Receive_buffer^(0+128)+1),w
  1871  00FE  3ED0               	addlw	208
  1872  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0101  00CC               	movwf	??_IST_Time_Formate
  1875  0102  084C               	movf	??_IST_Time_Formate,w
  1876  0103  00F0               	movwf	_Time_Temp2
  1877                           
  1878                           ;main.c: 241: Time_Hr=(Time_Temp1*10) + Time_Temp2;
  1879  0104  300A               	movlw	10
  1880  0105  00CC               	movwf	??_IST_Time_Formate
  1881  0106  084C               	movf	??_IST_Time_Formate,w
  1882  0107  00C8               	movwf	___bmul@multiplicand
  1883  0108  0875               	movf	_Time_Temp1,w
  1884  0109  118A  24BA  118A   	fcall	___bmul
  1885  010C  0770               	addwf	_Time_Temp2,w
  1886  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1887  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1888  010F  00CD               	movwf	??_IST_Time_Formate+1
  1889  0110  084D               	movf	??_IST_Time_Formate+1,w
  1890  0111  00C7               	movwf	_Time_Hr
  1891                           
  1892                           ;main.c: 242: Time_Hr = Time_Hr + 5;
  1893  0112  0847               	movf	_Time_Hr,w
  1894  0113  3E05               	addlw	5
  1895  0114  00CC               	movwf	??_IST_Time_Formate
  1896  0115  084C               	movf	??_IST_Time_Formate,w
  1897  0116  00C7               	movwf	_Time_Hr
  1898                           
  1899                           ;main.c: 243: Time_Temp1=Receive_buffer[2]-48;
  1900  0117  1683               	bsf	3,5	;RP0=1, select bank1
  1901  0118  1303               	bcf	3,6	;RP1=0, select bank1
  1902  0119  0822               	movf	(_Receive_buffer^(0+128)+2),w
  1903  011A  3ED0               	addlw	208
  1904  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1905  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1906  011D  00CC               	movwf	??_IST_Time_Formate
  1907  011E  084C               	movf	??_IST_Time_Formate,w
  1908  011F  00F5               	movwf	_Time_Temp1
  1909                           
  1910                           ;main.c: 244: Time_Temp2=Receive_buffer[3]-48;
  1911  0120  1683               	bsf	3,5	;RP0=1, select bank1
  1912  0121  1303               	bcf	3,6	;RP1=0, select bank1
  1913  0122  0823               	movf	(_Receive_buffer^(0+128)+3),w
  1914  0123  3ED0               	addlw	208
  1915  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1916  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1917  0126  00CC               	movwf	??_IST_Time_Formate
  1918  0127  084C               	movf	??_IST_Time_Formate,w
  1919  0128  00F0               	movwf	_Time_Temp2
  1920                           
  1921                           ;main.c: 245: Time_Min=(Time_Temp1*10)+Time_Temp2;
  1922  0129  300A               	movlw	10
  1923  012A  00CC               	movwf	??_IST_Time_Formate
  1924  012B  084C               	movf	??_IST_Time_Formate,w
  1925  012C  00C8               	movwf	___bmul@multiplicand
  1926  012D  0875               	movf	_Time_Temp1,w
  1927  012E  118A  24BA  118A   	fcall	___bmul
  1928  0131  0770               	addwf	_Time_Temp2,w
  1929  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1930  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1931  0134  00CD               	movwf	??_IST_Time_Formate+1
  1932  0135  084D               	movf	??_IST_Time_Formate+1,w
  1933  0136  00C6               	movwf	_Time_Min
  1934                           
  1935                           ;main.c: 246: Time_Min=Time_Min + 30;
  1936  0137  0846               	movf	_Time_Min,w
  1937  0138  3E1E               	addlw	30
  1938  0139  00CC               	movwf	??_IST_Time_Formate
  1939  013A  084C               	movf	??_IST_Time_Formate,w
  1940  013B  00C6               	movwf	_Time_Min
  1941                           
  1942                           ;main.c: 247: Time_Temp1=Receive_buffer[4]-48;
  1943  013C  1683               	bsf	3,5	;RP0=1, select bank1
  1944  013D  1303               	bcf	3,6	;RP1=0, select bank1
  1945  013E  0824               	movf	(_Receive_buffer^(0+128)+4),w
  1946  013F  3ED0               	addlw	208
  1947  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1948  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1949  0142  00CC               	movwf	??_IST_Time_Formate
  1950  0143  084C               	movf	??_IST_Time_Formate,w
  1951  0144  00F5               	movwf	_Time_Temp1
  1952                           
  1953                           ;main.c: 248: Time_Temp2=Receive_buffer[5]-48;
  1954  0145  1683               	bsf	3,5	;RP0=1, select bank1
  1955  0146  1303               	bcf	3,6	;RP1=0, select bank1
  1956  0147  0825               	movf	(_Receive_buffer^(0+128)+5),w
  1957  0148  3ED0               	addlw	208
  1958  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1959  014A  1303               	bcf	3,6	;RP1=0, select bank0
  1960  014B  00CC               	movwf	??_IST_Time_Formate
  1961  014C  084C               	movf	??_IST_Time_Formate,w
  1962  014D  00F0               	movwf	_Time_Temp2
  1963                           
  1964                           ;main.c: 249: Time_Sec=(Time_Temp1*10)+Time_Temp2;
  1965  014E  300A               	movlw	10
  1966  014F  00CC               	movwf	??_IST_Time_Formate
  1967  0150  084C               	movf	??_IST_Time_Formate,w
  1968  0151  00C8               	movwf	___bmul@multiplicand
  1969  0152  0875               	movf	_Time_Temp1,w
  1970  0153  118A  24BA  118A   	fcall	___bmul
  1971  0156  0770               	addwf	_Time_Temp2,w
  1972  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1973  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1974  0159  00CD               	movwf	??_IST_Time_Formate+1
  1975  015A  084D               	movf	??_IST_Time_Formate+1,w
  1976  015B  00C5               	movwf	_Time_Sec
  1977                           
  1978                           ;main.c: 251: if(Time_Min > 59)
  1979  015C  303C               	movlw	60
  1980  015D  0246               	subwf	_Time_Min,w
  1981  015E  1C03               	skipc
  1982  015F  296A               	goto	l1731
  1983                           
  1984                           ;main.c: 252: {
  1985                           ;main.c: 253: Time_Min = Time_Min - 60;
  1986  0160  0846               	movf	_Time_Min,w
  1987  0161  3EC4               	addlw	196
  1988  0162  00CC               	movwf	??_IST_Time_Formate
  1989  0163  084C               	movf	??_IST_Time_Formate,w
  1990  0164  00C6               	movwf	_Time_Min
  1991                           
  1992                           ;main.c: 254: Time_Hr=Time_Hr + 1;
  1993  0165  0847               	movf	_Time_Hr,w
  1994  0166  3E01               	addlw	1
  1995  0167  00CC               	movwf	??_IST_Time_Formate
  1996  0168  084C               	movf	??_IST_Time_Formate,w
  1997  0169  00C7               	movwf	_Time_Hr
  1998  016A                     l1731:	
  1999                           
  2000                           ;main.c: 255: }
  2001                           ;main.c: 256: if(Time_Hr > 24)
  2002  016A  3019               	movlw	25
  2003  016B  0247               	subwf	_Time_Hr,w
  2004  016C  1C03               	skipc
  2005  016D  2973               	goto	l1735
  2006                           
  2007                           ;main.c: 257: {
  2008                           ;main.c: 258: Time_Hr = (Time_Hr - 24);
  2009  016E  0847               	movf	_Time_Hr,w
  2010  016F  3EE8               	addlw	232
  2011  0170  00CC               	movwf	??_IST_Time_Formate
  2012  0171  084C               	movf	??_IST_Time_Formate,w
  2013  0172  00C7               	movwf	_Time_Hr
  2014  0173                     l1735:	
  2015                           
  2016                           ;main.c: 259: }
  2017                           ;main.c: 260: if((Time_Hr >=12) && Time_Hr <=23)
  2018  0173  300C               	movlw	12
  2019  0174  0247               	subwf	_Time_Hr,w
  2020  0175  1C03               	skipc
  2021  0176  297D               	goto	l182
  2022  0177  3018               	movlw	24
  2023  0178  0247               	subwf	_Time_Hr,w
  2024  0179  1803               	skipnc
  2025  017A  297D               	goto	l182
  2026                           
  2027                           ;main.c: 261: {
  2028                           ;main.c: 262: PORTBbits.RB6=1;
  2029  017B  1706               	bsf	6,6	;volatile
  2030                           
  2031                           ;main.c: 263: }
  2032  017C  297E               	goto	l1741
  2033  017D                     l182:	
  2034                           
  2035                           ;main.c: 264: else
  2036                           ;main.c: 265: {
  2037                           ;main.c: 266: PORTBbits.RB6=0;
  2038  017D  1306               	bcf	6,6	;volatile
  2039  017E                     l1741:	
  2040                           
  2041                           ;main.c: 267: }
  2042                           ;main.c: 268: if(Time_Hr > 12)
  2043  017E  300D               	movlw	13
  2044  017F  0247               	subwf	_Time_Hr,w
  2045  0180  1C03               	skipc
  2046  0181  2987               	goto	l1745
  2047                           
  2048                           ;main.c: 269: {
  2049                           ;main.c: 270: Time_Hr = (Time_Hr - 12);
  2050  0182  0847               	movf	_Time_Hr,w
  2051  0183  3EF4               	addlw	244
  2052  0184  00CC               	movwf	??_IST_Time_Formate
  2053  0185  084C               	movf	??_IST_Time_Formate,w
  2054  0186  00C7               	movwf	_Time_Hr
  2055  0187                     l1745:	
  2056                           
  2057                           ;main.c: 271: }
  2058                           ;main.c: 274: Time_local_Hr = Time_Hr;
  2059  0187  0847               	movf	_Time_Hr,w
  2060  0188  00CC               	movwf	??_IST_Time_Formate
  2061  0189  01CD               	clrf	??_IST_Time_Formate+1
  2062  018A  084C               	movf	??_IST_Time_Formate,w
  2063  018B  00BE               	movwf	_Time_local_Hr
  2064  018C  084D               	movf	??_IST_Time_Formate+1,w
  2065  018D  00BF               	movwf	_Time_local_Hr+1
  2066                           
  2067                           ;main.c: 275: Time_local_Min = Time_Min;
  2068  018E  0846               	movf	_Time_Min,w
  2069  018F  00CC               	movwf	??_IST_Time_Formate
  2070  0190  01CD               	clrf	??_IST_Time_Formate+1
  2071  0191  084C               	movf	??_IST_Time_Formate,w
  2072  0192  00BC               	movwf	_Time_local_Min
  2073  0193  084D               	movf	??_IST_Time_Formate+1,w
  2074  0194  00BD               	movwf	_Time_local_Min+1
  2075                           
  2076                           ;main.c: 276: Time_local_Sec = Time_Sec;
  2077  0195  0845               	movf	_Time_Sec,w
  2078  0196  00CC               	movwf	??_IST_Time_Formate
  2079  0197  01CD               	clrf	??_IST_Time_Formate+1
  2080  0198  084C               	movf	??_IST_Time_Formate,w
  2081  0199  00BA               	movwf	_Time_local_Sec
  2082  019A  084D               	movf	??_IST_Time_Formate+1,w
  2083  019B  00BB               	movwf	_Time_local_Sec+1
  2084  019C  0008               	return
  2085  019D                     __end_of_IST_Time_Formate:	
  2086                           
  2087                           	psect	text11
  2088  04BA                     __ptext11:	
  2089 ;; *************** function ___bmul *****************
  2090 ;; Defined at:
  2091 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul8.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  multiplier      1    wreg     unsigned char 
  2094 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  multiplier      1    3[BANK0 ] unsigned char 
  2097 ;;  product         1    2[BANK0 ] unsigned char 
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      unsigned char 
  2100 ;; Registers used:
  2101 ;;		wreg, status,2, status,0
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2107 ;;      Params:         0       1       0       0
  2108 ;;      Locals:         0       2       0       0
  2109 ;;      Temps:          0       1       0       0
  2110 ;;      Totals:         0       4       0       0
  2111 ;;Total ram usage:        4 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:    2
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_IST_Time_Formate
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           
  2122                           ;psect for function ___bmul
  2123  04BA                     ___bmul:	
  2124                           
  2125                           ;incstack = 0
  2126                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2127                           ;___bmul@multiplier stored from wreg
  2128  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2129  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2130  04BC  00CB               	movwf	___bmul@multiplier
  2131  04BD  01CA               	clrf	___bmul@product
  2132  04BE                     l1491:	
  2133  04BE  1C4B               	btfss	___bmul@multiplier,0
  2134  04BF  2CC4               	goto	l1495
  2135  04C0  0848               	movf	___bmul@multiplicand,w
  2136  04C1  00C9               	movwf	??___bmul
  2137  04C2  0849               	movf	??___bmul,w
  2138  04C3  07CA               	addwf	___bmul@product,f
  2139  04C4                     l1495:	
  2140  04C4  1003               	clrc
  2141  04C5  0DC8               	rlf	___bmul@multiplicand,f
  2142  04C6  1003               	clrc
  2143  04C7  0CCB               	rrf	___bmul@multiplier,f
  2144  04C8  084B               	movf	___bmul@multiplier,w
  2145  04C9  1D03               	btfss	3,2
  2146  04CA  2CBE               	goto	l1491
  2147  04CB  084A               	movf	___bmul@product,w
  2148  04CC  0008               	return
  2149  04CD                     __end_of___bmul:	
  2150                           
  2151                           	psect	text12
  2152  047C                     __ptext12:	
  2153 ;; *************** function _INIT *****************
  2154 ;; Defined at:
  2155 ;;		line 192 in file "main.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;		None
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;		None
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      void 
  2162 ;; Registers used:
  2163 ;;		wreg, status,2
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2169 ;;      Params:         0       0       0       0
  2170 ;;      Locals:         0       0       0       0
  2171 ;;      Temps:          0       0       0       0
  2172 ;;      Totals:         0       0       0       0
  2173 ;;Total ram usage:        0 bytes
  2174 ;; Hardware stack levels used:    1
  2175 ;; Hardware stack levels required when called:    2
  2176 ;; This function calls:
  2177 ;;		Nothing
  2178 ;; This function is called by:
  2179 ;;		_main
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           
  2184                           ;psect for function _INIT
  2185  047C                     _INIT:	
  2186                           
  2187                           ;main.c: 194: OSCCON=0X75;
  2188                           
  2189                           ;incstack = 0
  2190                           ; Regs used in _INIT: [wreg+status,2]
  2191  047C  3075               	movlw	117
  2192  047D  1683               	bsf	3,5	;RP0=1, select bank1
  2193  047E  1303               	bcf	3,6	;RP1=0, select bank1
  2194  047F  008F               	movwf	15	;volatile
  2195                           
  2196                           ;main.c: 196: TRISA=0;
  2197  0480  0185               	clrf	5	;volatile
  2198                           
  2199                           ;main.c: 197: TRISC=0;
  2200  0481  0187               	clrf	7	;volatile
  2201                           
  2202                           ;main.c: 198: TRISB=0;
  2203  0482  0186               	clrf	6	;volatile
  2204                           
  2205                           ;main.c: 199: ANSEL =0;
  2206  0483  1283               	bcf	3,5	;RP0=0, select bank2
  2207  0484  1703               	bsf	3,6	;RP1=1, select bank2
  2208  0485  019E               	clrf	30	;volatile
  2209                           
  2210                           ;main.c: 200: ANSELH =0;
  2211  0486  019F               	clrf	31	;volatile
  2212                           
  2213                           ;main.c: 201: GIE=1;
  2214  0487  178B               	bsf	11,7	;volatile
  2215                           
  2216                           ;main.c: 202: PEIE=1;
  2217  0488  170B               	bsf	11,6	;volatile
  2218                           
  2219                           ;main.c: 203: TRISB5=1;
  2220  0489  1683               	bsf	3,5	;RP0=1, select bank1
  2221  048A  1303               	bcf	3,6	;RP1=0, select bank1
  2222  048B  1686               	bsf	6,5	;volatile
  2223                           
  2224                           ;main.c: 204: TXSTA=0x28;
  2225  048C  3028               	movlw	40
  2226  048D  0098               	movwf	24	;volatile
  2227                           
  2228                           ;main.c: 205: RCSTA=0x80;
  2229  048E  3080               	movlw	128
  2230  048F  1283               	bcf	3,5	;RP0=0, select bank0
  2231  0490  1303               	bcf	3,6	;RP1=0, select bank0
  2232  0491  0098               	movwf	24	;volatile
  2233                           
  2234                           ;main.c: 206: SPBRG=12;
  2235  0492  300C               	movlw	12
  2236  0493  1683               	bsf	3,5	;RP0=1, select bank1
  2237  0494  1303               	bcf	3,6	;RP1=0, select bank1
  2238  0495  0099               	movwf	25	;volatile
  2239                           
  2240                           ;main.c: 207: SPBRGH=0;
  2241  0496  019A               	clrf	26	;volatile
  2242                           
  2243                           ;main.c: 208: BRGH = 0;
  2244  0497  1118               	bcf	24,2	;volatile
  2245                           
  2246                           ;main.c: 209: BRG16 = 0;
  2247  0498  119B               	bcf	27,3	;volatile
  2248                           
  2249                           ;main.c: 210: RCIE=1;
  2250  0499  168C               	bsf	12,5	;volatile
  2251                           
  2252                           ;main.c: 211: RCIF=0;
  2253  049A  1283               	bcf	3,5	;RP0=0, select bank0
  2254  049B  1303               	bcf	3,6	;RP1=0, select bank0
  2255  049C  128C               	bcf	12,5	;volatile
  2256                           
  2257                           ;main.c: 212: CREN = 1;
  2258  049D  1618               	bsf	24,4	;volatile
  2259                           
  2260                           ;main.c: 213: SPEN = 1;
  2261  049E  1798               	bsf	24,7	;volatile
  2262  049F  0008               	return
  2263  04A0                     __end_of_INIT:	
  2264                           
  2265                           	psect	text13
  2266  04A0                     __ptext13:	
  2267 ;; *************** function _ISR *****************
  2268 ;; Defined at:
  2269 ;;		line 60 in file "main.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;		None
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;		None
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      void 
  2276 ;; Registers used:
  2277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2283 ;;      Params:         0       0       0       0
  2284 ;;      Locals:         0       0       0       0
  2285 ;;      Temps:          4       0       0       0
  2286 ;;      Totals:         4       0       0       0
  2287 ;;Total ram usage:        4 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:    1
  2290 ;; This function calls:
  2291 ;;		_UARTReceiveInterrupt
  2292 ;; This function is called by:
  2293 ;;		Interrupt level 1
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           
  2298                           ;psect for function _ISR
  2299  04A0                     _ISR:	
  2300                           
  2301                           ;main.c: 62: if(RCIE && RCIF)
  2302  04A0  1683               	bsf	3,5	;RP0=1, select bank1
  2303  04A1  1303               	bcf	3,6	;RP1=0, select bank1
  2304  04A2  1E8C               	btfss	12,5	;volatile
  2305  04A3  2CAE               	goto	i1l118
  2306  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  2307  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  2308  04A6  1E8C               	btfss	12,5	;volatile
  2309  04A7  2CAE               	goto	i1l118
  2310                           
  2311                           ;main.c: 63: {
  2312                           ;main.c: 64: UARTReceiveInterrupt();
  2313  04A8  118A  2217  118A   	fcall	_UARTReceiveInterrupt
  2314                           
  2315                           ;main.c: 66: RCIF = 0;
  2316  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  2317  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  2318  04AD  128C               	bcf	12,5	;volatile
  2319  04AE                     i1l118:	
  2320  04AE  087B               	movf	??_ISR+3,w
  2321  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  2322  04B0  00FF               	movwf	127
  2323  04B1  087A               	movf	??_ISR+2,w
  2324  04B2  008A               	movwf	10
  2325  04B3  0879               	movf	??_ISR+1,w
  2326  04B4  0084               	movwf	4
  2327  04B5  0E78               	swapf	??_ISR^(0+-128),w
  2328  04B6  0083               	movwf	3
  2329  04B7  0EFE               	swapf	126,f
  2330  04B8  0E7E               	swapf	126,w
  2331  04B9  0009               	retfie
  2332  04BA                     __end_of_ISR:	
  2333                           
  2334                           	psect	intentry
  2335  0004                     __pintentry:	
  2336                           ;incstack = 0
  2337                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2338                           
  2339  0004                     interrupt_function:	
  2340  007E                     saved_w	set	btemp
  2341  0004  00FE               	movwf	btemp
  2342  0005  0E03               	swapf	3,w
  2343  0006  00F8               	movwf	??_ISR
  2344  0007  0804               	movf	4,w
  2345  0008  00F9               	movwf	??_ISR+1
  2346  0009  080A               	movf	10,w
  2347  000A  00FA               	movwf	??_ISR+2
  2348  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2349  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2350  000D  087F               	movf	btemp+1,w
  2351  000E  00FB               	movwf	??_ISR+3
  2352  000F  118A  2CA0         	ljmp	_ISR
  2353                           
  2354                           	psect	text14
  2355  0217                     __ptext14:	
  2356 ;; *************** function _UARTReceiveInterrupt *****************
  2357 ;; Defined at:
  2358 ;;		line 149 in file "main.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;		None
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;  temp            1    1[COMMON] unsigned char 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      void 
  2365 ;; Registers used:
  2366 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2372 ;;      Params:         0       0       0       0
  2373 ;;      Locals:         1       0       0       0
  2374 ;;      Temps:          1       0       0       0
  2375 ;;      Totals:         2       0       0       0
  2376 ;;Total ram usage:        2 bytes
  2377 ;; Hardware stack levels used:    1
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_ISR
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           
  2386                           ;psect for function _UARTReceiveInterrupt
  2387  0217                     _UARTReceiveInterrupt:	
  2388                           
  2389                           ;main.c: 151: unsigned char temp;
  2390                           ;main.c: 152: temp = RCREG;
  2391                           
  2392                           ;incstack = 0
  2393                           ; Regs used in _UARTReceiveInterrupt: [wreg-fsr0h+status,2+status,0]
  2394  0217  1283               	bcf	3,5	;RP0=0, select bank0
  2395  0218  1303               	bcf	3,6	;RP1=0, select bank0
  2396  0219  081A               	movf	26,w	;volatile
  2397  021A  00F6               	movwf	??_UARTReceiveInterrupt
  2398  021B  0876               	movf	??_UARTReceiveInterrupt,w
  2399  021C  00F7               	movwf	UARTReceiveInterrupt@temp
  2400                           
  2401                           ;main.c: 153: if(temp == '$')
  2402  021D  3024               	movlw	36
  2403  021E  0677               	xorwf	UARTReceiveInterrupt@temp,w
  2404  021F  1D03               	btfss	3,2
  2405  0220  2A24               	goto	i1l1223
  2406                           
  2407                           ;main.c: 154: U8Valid_Char=1;
  2408  0221  01F2               	clrf	_U8Valid_Char
  2409  0222  0AF2               	incf	_U8Valid_Char,f
  2410  0223  0008               	return
  2411  0224                     i1l1223:	
  2412                           
  2413                           ;main.c: 155: else if(U8Valid_Char == 1){
  2414  0224  0372               	decf	_U8Valid_Char,w
  2415  0225  1D03               	btfss	3,2
  2416  0226  2A30               	goto	i1l1229
  2417                           
  2418                           ;main.c: 156: if(temp == 'G')
  2419  0227  3047               	movlw	71
  2420  0228  0677               	xorwf	UARTReceiveInterrupt@temp,w
  2421  0229  1D03               	btfss	3,2
  2422  022A  0008               	return
  2423                           
  2424                           ;main.c: 157: U8Valid_Char=2;
  2425  022B  3002               	movlw	2
  2426  022C  00F6               	movwf	??_UARTReceiveInterrupt
  2427  022D  0876               	movf	??_UARTReceiveInterrupt,w
  2428  022E  00F2               	movwf	_U8Valid_Char
  2429                           
  2430                           ;main.c: 158: }
  2431  022F  0008               	return
  2432  0230                     i1l1229:	
  2433                           
  2434                           ;main.c: 159: else if(U8Valid_Char == 2){
  2435  0230  3002               	movlw	2
  2436  0231  0672               	xorwf	_U8Valid_Char,w
  2437  0232  1D03               	btfss	3,2
  2438  0233  2A3D               	goto	i1l1235
  2439                           
  2440                           ;main.c: 160: if(temp == 'P')
  2441  0234  3050               	movlw	80
  2442  0235  0677               	xorwf	UARTReceiveInterrupt@temp,w
  2443  0236  1D03               	btfss	3,2
  2444  0237  0008               	return
  2445                           
  2446                           ;main.c: 161: U8Valid_Char=3;
  2447  0238  3003               	movlw	3
  2448  0239  00F6               	movwf	??_UARTReceiveInterrupt
  2449  023A  0876               	movf	??_UARTReceiveInterrupt,w
  2450  023B  00F2               	movwf	_U8Valid_Char
  2451                           
  2452                           ;main.c: 162: }
  2453  023C  0008               	return
  2454  023D                     i1l1235:	
  2455                           
  2456                           ;main.c: 163: else if(U8Valid_Char == 3){
  2457  023D  3003               	movlw	3
  2458  023E  0672               	xorwf	_U8Valid_Char,w
  2459  023F  1D03               	btfss	3,2
  2460  0240  2A4A               	goto	i1l1241
  2461                           
  2462                           ;main.c: 164: if(temp == 'G')
  2463  0241  3047               	movlw	71
  2464  0242  0677               	xorwf	UARTReceiveInterrupt@temp,w
  2465  0243  1D03               	btfss	3,2
  2466  0244  0008               	return
  2467                           
  2468                           ;main.c: 165: U8Valid_Char=4;
  2469  0245  3004               	movlw	4
  2470  0246  00F6               	movwf	??_UARTReceiveInterrupt
  2471  0247  0876               	movf	??_UARTReceiveInterrupt,w
  2472  0248  00F2               	movwf	_U8Valid_Char
  2473                           
  2474                           ;main.c: 166: }
  2475  0249  0008               	return
  2476  024A                     i1l1241:	
  2477                           
  2478                           ;main.c: 167: else if(U8Valid_Char == 4){
  2479  024A  3004               	movlw	4
  2480  024B  0672               	xorwf	_U8Valid_Char,w
  2481  024C  1D03               	btfss	3,2
  2482  024D  2A57               	goto	i1l1247
  2483                           
  2484                           ;main.c: 168: if(temp == 'G')
  2485  024E  3047               	movlw	71
  2486  024F  0677               	xorwf	UARTReceiveInterrupt@temp,w
  2487  0250  1D03               	btfss	3,2
  2488  0251  0008               	return
  2489                           
  2490                           ;main.c: 169: U8Valid_Char=5;
  2491  0252  3005               	movlw	5
  2492  0253  00F6               	movwf	??_UARTReceiveInterrupt
  2493  0254  0876               	movf	??_UARTReceiveInterrupt,w
  2494  0255  00F2               	movwf	_U8Valid_Char
  2495                           
  2496                           ;main.c: 170: }
  2497  0256  0008               	return
  2498  0257                     i1l1247:	
  2499                           
  2500                           ;main.c: 171: else if(U8Valid_Char == 5){
  2501  0257  3005               	movlw	5
  2502  0258  0672               	xorwf	_U8Valid_Char,w
  2503  0259  1D03               	btfss	3,2
  2504  025A  2A64               	goto	i1l1253
  2505                           
  2506                           ;main.c: 172: if(temp == 'A')
  2507  025B  3041               	movlw	65
  2508  025C  0677               	xorwf	UARTReceiveInterrupt@temp,w
  2509  025D  1D03               	btfss	3,2
  2510  025E  0008               	return
  2511                           
  2512                           ;main.c: 173: U8Valid_Char=6;
  2513  025F  3006               	movlw	6
  2514  0260  00F6               	movwf	??_UARTReceiveInterrupt
  2515  0261  0876               	movf	??_UARTReceiveInterrupt,w
  2516  0262  00F2               	movwf	_U8Valid_Char
  2517                           
  2518                           ;main.c: 174: }
  2519  0263  0008               	return
  2520  0264                     i1l1253:	
  2521                           
  2522                           ;main.c: 175: else if(U8Valid_Char == 6){
  2523  0264  3006               	movlw	6
  2524  0265  0672               	xorwf	_U8Valid_Char,w
  2525  0266  1D03               	btfss	3,2
  2526  0267  2A71               	goto	i1l1259
  2527                           
  2528                           ;main.c: 176: if(temp == ',')
  2529  0268  302C               	movlw	44
  2530  0269  0677               	xorwf	UARTReceiveInterrupt@temp,w
  2531  026A  1D03               	btfss	3,2
  2532  026B  0008               	return
  2533                           
  2534                           ;main.c: 177: U8Valid_Char=8;
  2535  026C  3008               	movlw	8
  2536  026D  00F6               	movwf	??_UARTReceiveInterrupt
  2537  026E  0876               	movf	??_UARTReceiveInterrupt,w
  2538  026F  00F2               	movwf	_U8Valid_Char
  2539                           
  2540                           ;main.c: 178: }
  2541  0270  0008               	return
  2542  0271                     i1l1259:	
  2543                           
  2544                           ;main.c: 179: else if(U8Valid_Char == 8){
  2545  0271  3008               	movlw	8
  2546  0272  0672               	xorwf	_U8Valid_Char,w
  2547  0273  1D03               	btfss	3,2
  2548  0274  0008               	return
  2549                           
  2550                           ;main.c: 182: Receive_buffer[U16Rx_Write_Index] = temp;
  2551  0275  0877               	movf	UARTReceiveInterrupt@temp,w
  2552  0276  00F6               	movwf	??_UARTReceiveInterrupt
  2553  0277  0874               	movf	_U16Rx_Write_Index,w
  2554  0278  3EA0               	addlw	(low (_Receive_buffer| 0))& (0+255)
  2555  0279  0084               	movwf	4
  2556  027A  0876               	movf	??_UARTReceiveInterrupt,w
  2557  027B  1383               	bcf	3,7	;select IRP bank1
  2558  027C  0080               	movwf	0
  2559                           
  2560                           ;main.c: 183: U16Rx_Write_Index++;
  2561  027D  3001               	movlw	1
  2562  027E  00F6               	movwf	??_UARTReceiveInterrupt
  2563  027F  0876               	movf	??_UARTReceiveInterrupt,w
  2564  0280  07F4               	addwf	_U16Rx_Write_Index,f
  2565                           
  2566                           ;main.c: 184: U16ResponseSize = U16Rx_Write_Index;
  2567  0281  0874               	movf	_U16Rx_Write_Index,w
  2568  0282  00F6               	movwf	??_UARTReceiveInterrupt
  2569  0283  0876               	movf	??_UARTReceiveInterrupt,w
  2570  0284  00F3               	movwf	_U16ResponseSize
  2571                           
  2572                           ;main.c: 185: if(U16ResponseSize > 8){
  2573  0285  3009               	movlw	9
  2574  0286  0273               	subwf	_U16ResponseSize,w
  2575  0287  1C03               	skipc
  2576  0288  0008               	return
  2577                           
  2578                           ;main.c: 186: U8Valid_Char=0;
  2579  0289  01F2               	clrf	_U8Valid_Char
  2580  028A  0008               	return
  2581  028B                     __end_of_UARTReceiveInterrupt:	
  2582  007E                     btemp	set	126	;btemp
  2583  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         126
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     16      56
    BANK1            80      0      80
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_UARTReceiveInterrupt

Critical Paths under _main in BANK0

    _main->_Time_Formate_to_STR
    _Time_Formate_to_STR_local->___lwdiv
    _Time_Formate_to_STR->___awdiv
    _IST_Time_Formate->___bmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3569
                                             12 BANK0      4     4      0
                               _INIT
                   _IST_Time_Formate
                               _Tick
                _Time_Formate_to_STR
          _Time_Formate_to_STR_local
               _UARTReceiveddatasize
                  _UARTResetRxBuffer
 ---------------------------------------------------------------------------------
 (1) _UARTResetRxBuffer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UARTReceiveddatasize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Time_Formate_to_STR_local                            1     1      0    1397
                                              8 BANK0      1     1      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     694
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     703
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Time_Formate_to_STR                                  3     3      0    1802
                                              9 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     895
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     907
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _Tick                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IST_Time_Formate                                     2     2      0     367
                                              4 BANK0      2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     367
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _INIT                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     177
                                              2 COMMON     4     4      0
               _UARTReceiveInterrupt
 ---------------------------------------------------------------------------------
 (4) _UARTReceiveInterrupt                                 2     2      0     177
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INIT
   _IST_Time_Formate
     ___bmul
   _Tick
   _Time_Formate_to_STR
     ___awdiv
     ___awmod
   _Time_Formate_to_STR_local
     ___lwdiv
     ___lwmod
   _UARTReceiveddatasize
   _UARTResetRxBuffer

 _ISR (ROOT)
   _UARTReceiveInterrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     10      38       3       70.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      94       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      94      10        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Thu Nov 08 21:13:55 2018

                        _U8_tmr_cnt 0042                          __CFG_CP$ON 0000  
                                 _i 0032                                   _j 0071  
                    ___bmul@product 004A                        ___awdiv@sign 004E  
                                fsr 0004               ?_UARTReceiveInterrupt 0076  
                               l182 017D                                 _GIE 005F  
                      __CFG_CPD$OFF 0000                                 _ISR 04A0  
                               _sec 0034                                 fsr0 0004  
                               indf 0000                        ___awmod@sign 004E  
              _UARTReceiveddatasize 04D8                                ?_ISR 0076  
                              l1511 036E                                l1603 0438  
                              l1517 0379                                l1621 045E  
                              l1543 03B8                                l1535 03A5  
                              l1527 0381                                l1607 0443  
                              l1529 038F                                l1625 046C  
                              l1491 04BE                                l1731 016A  
                              l1539 03B0                                l1555 03C9  
                              l1619 0450                                l1741 017E  
                              l1581 0405                                l1573 03F2  
                              l1629 0477                                l1495 04C4  
                              l1735 0173                                l1567 03D6  
                              l1559 03D0                                l1745 0187  
                              l1569 03E4                                l1577 03FD  
                              l1761 0091                                l1595 0414  
                              l1597 0422                                l1765 0032  
                              l1679 02BA                                l1695 02E7  
                              l1699 02F0                                _BRGH 04C2  
                              _CREN 00C4                                u1405 039C  
                              u1415 03A6                                u1505 03F3  
                              u1375 0384                                u1615 0453  
                              u1545 0417                                u1395 0390  
                              u1475 03D9                                u1635 0464  
                              u1565 0423                                u1645 046D  
                              u1670 02B7                                u1495 03EA  
                              u1575 042F                                u1807 0049  
                              u1585 0439                                u1817 005C  
                              u1827 006F                                u1837 0082  
                              _INIT 047C                                u1847 00AF  
                              u1857 00C2                                u1867 00D5  
                              _PEIE 005E                                u1877 00E8  
                              _RCIE 0465                                _RCIF 0065  
                              _SPEN 00C7                                _TRMT 04C1  
                              _Tick 028B                                _main 0028  
                              btemp 007E                                start 0011  
                     __CFG_IESO$OFF 0000                   ___bmul@multiplier 004B  
                             ??_ISR 0078                               ?_INIT 0076  
                             ?_Tick 0076                               ?_main 0076  
                   __end_of___awdiv 03BD                               _BRG16 04DB  
                     __CFG_WDTE$OFF 0000                     __end_of___awmod 040A  
                             _ANSEL 011E                     ___awdiv@divisor 0048  
                   __end_of___lwdiv 0448                               i1l118 04AE  
                   __end_of___lwmod 047C                     ___awdiv@counter 004D  
                             _RCREG 001A                               _RCSTA 0018  
                             _SPBRG 0099                               _PORTA 0005  
                             _PORTC 0007                               _TRISA 0085  
                             _TRISB 0086                               _TRISC 0087  
                             _TXREG 0019                               _TXSTA 0098  
             ?_UARTReceiveddatasize 0076                      __CFG_FCMEN$OFF 0000  
        ?_Time_Formate_to_STR_local 0076                               main@j 0056  
                    __CFG_BOREN$OFF 0000                    _IST_Time_Formate 00F2  
                             pclath 000A                               status 0003  
                             wtemp0 007E                        __end_of_INIT 04A0  
                    __CFG_MCLRE$OFF 0000                     __initialization 0013  
                      __end_of_Tick 02FA                        __end_of_main 00F2  
                            ??_INIT 0048              ??_UARTReceiveInterrupt 0076  
                            ??_Tick 0048                              ??_main 0054  
                   _U16ResponseSize 0073                    ___awdiv@dividend 004A  
                            _ANSELH 011F   __end_of_Time_Formate_to_STR_local 0362  
                            i1l1223 0224                              i1l1241 024A  
                            i1l1235 023D                              i1l1253 0264  
                            i1l1229 0230                              i1l1247 0257  
                            i1l1259 0271                              _OSCCON 008F  
                            _SPBRGH 009A                              _TRISB5 0435  
                    __CFG_PWRTE$OFF 0000                          _Time_Temp1 0075  
                        _Time_Temp2 0070                              ___bmul 04BA  
                         ??___awdiv 004C                           ??___awmod 004C  
                         ??___lwdiv 004C                           ??___lwmod 004C  
                            _offset 0044                    ___awdiv@quotient 004F  
                   ___awmod@divisor 0048                     ___awmod@counter 004D  
            ??_UARTReceiveddatasize 0048                              saved_w 007E  
           __end_of__initialization 0025         __end_of_Time_Formate_to_STR 0217  
               ___bmul@multiplicand 0048                      __pcstackCOMMON 0076  
                        __pbssBANK0 0020                          __pbssBANK1 00A0  
                    _Time_local_Min 003C                      _Time_local_Sec 003A  
                        __pmaintext 0028                             ?___bmul 0048  
                        __pintentry 0004            __end_of_IST_Time_Formate 019D  
       ??_Time_Formate_to_STR_local 0050                   _UARTResetRxBuffer 04D5  
                ?_UARTResetRxBuffer 0076                             _Time_Hr 0047  
               ??_UARTResetRxBuffer 0048                     __size_of___bmul 0013  
                           ___awdiv 0362                             ___awmod 03BD  
                           ___lwdiv 040A                             ___lwmod 0448  
                           __ptext1 04D5                             __ptext2 04D8  
                           __ptext3 02FA                             __ptext4 0448  
                           __ptext5 040A                             __ptext6 019D  
                           __ptext7 03BD                             __ptext8 0362  
                           __ptext9 028B                        __size_of_ISR 001A  
                  ___awmod@dividend 004A           __end_of_UARTResetRxBuffer 04D8  
                           clrloop0 04CE                end_of_initialization 0025  
                         _IST_TIME1 0020           _Time_Formate_to_STR_local 02FA  
                         _PORTBbits 0006       __size_of_UARTReceiveInterrupt 0074  
                    __end_of___bmul 04CD                      _Receive_buffer 00A0  
               start_initialization 0013       __size_of_UARTReceiveddatasize 0002  
                       __end_of_ISR 04BA          __size_of_UARTResetRxBuffer 0003  
               _U8sent_intervel_cnt 0040                            ??___bmul 0049  
      __size_of_Time_Formate_to_STR 007A                   ?_IST_Time_Formate 0076  
                ??_IST_Time_Formate 004C                         __pbssCOMMON 0070  
                         ___latbits 0001                       __pcstackBANK0 0048  
                     _Time_local_Hr 003E                    ___lwdiv@dividend 004A  
                          ?___awdiv 0048                            ?___awmod 0048  
                          ?___lwdiv 0048                            ?___lwmod 0048  
__size_of_Time_Formate_to_STR_local 0068                    ___lwdiv@quotient 004E  
                         _error_cnt 0036            UARTReceiveInterrupt@temp 0077  
                 interrupt_function 0004                           clear_ram0 04CD  
                          _IST_TIME 0029        __end_of_UARTReceiveInterrupt 028B  
                          _Temp_Cnt 0038                            _Time_Min 0046  
                          _Time_Sec 0045                    __size_of___awdiv 005B  
                  __size_of___awmod 004D                    __size_of___lwdiv 003E  
                  __size_of___lwmod 0034                     ___lwdiv@divisor 0048  
                   ___lwdiv@counter 004D                        _U8Valid_Char 0072  
                          __ptext10 00F2                            __ptext11 04BA  
                          __ptext12 047C                            __ptext13 04A0  
                          __ptext14 0217                 _Time_Formate_to_STR 019D  
                     __size_of_INIT 0024                       __size_of_Tick 006F  
                     __size_of_main 00CA        __end_of_UARTReceiveddatasize 04DA  
                 _U16Rx_Write_Index 0074                ?_Time_Formate_to_STR 0076  
                          intlevel1 0000           __size_of_IST_Time_Formate 00AB  
                  ___lwmod@dividend 004A               ??_Time_Formate_to_STR 0051  
              _UARTReceiveInterrupt 0217                     ___lwmod@divisor 0048  
                   ___lwmod@counter 004D                   __CFG_FOSC$INTRCIO 0000  
